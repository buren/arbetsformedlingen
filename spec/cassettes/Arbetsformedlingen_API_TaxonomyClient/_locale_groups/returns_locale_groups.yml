---
http_interactions:
- request:
    method: post
    uri: http://api.arbetsformedlingen.se/taxonomi/v0/TaxonomiService.asmx
    body:
      encoding: UTF-8
      string: |
        <?xml version="1.0" encoding="UTF-8"?>
        <soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
          <soap12:Body>
            <GetAllLocaleGroups xmlns="urn:ams.se:Taxonomy">
              <languageId>502</languageId>
            </GetAllLocaleGroups>
          </soap12:Body>
        </soap12:Envelope>
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - api.arbetsformedlingen.se
      Content-Type:
      - text/xml
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 09 Dec 2018 09:57:21 GMT
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private, max-age=0
      Content-Type:
      - application/soap+xml; charset=utf-8
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
      Content-Length:
      - '191998'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - X-JWT-Assertion, Origin, X-Requested-With, Content-Type, Accept
      Access-Control-Allow-Methods:
      - GET, OPTIONS, HEAD, PUT, POST, DELETE
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><GetAllLocaleGroupsResponse xmlns="urn:ams.se:Taxonomy"><GetAllLocaleGroupsResult><LocaleGroup><LocaleGroupID>1518</LocaleGroupID><LocaleCode>0110</LocaleCode><Term>Officerare</Term><Description>Leder, planerar och genomför militära operationer nationellt och internationellt. Leder militära förband.
</Description><LocaleFieldID>22</LocaleFieldID><LocaleLevel3Code>011</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1519</LocaleGroupID><LocaleCode>0210</LocaleCode><Term>Specialistofficerare</Term><Description>Deltar i planering och genomförande av militära operationer, nationellt och internationellt. Utbildar samt är specialist inom sitt tjänsteområde inom teknisk tjänst, sjöstrid, luftstrid, markstrid, ledning eller logistik. Leder lägre militära förband.</Description><LocaleFieldID>22</LocaleFieldID><LocaleLevel3Code>021</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1520</LocaleGroupID><LocaleCode>0310</LocaleCode><Term>Soldater m.fl.</Term><Description>Medverkar i militära operationer och övningar nationellt och internationellt med främst väpnad strid som huvuduppgift.</Description><LocaleFieldID>22</LocaleFieldID><LocaleLevel3Code>031</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1515</LocaleGroupID><LocaleCode>1111</LocaleCode><Term>Politiker</Term><Description>Fattar beslut, leder och påverkar verksamheten i demokratiskt valda organ på nationell, regional eller lokal nivå. Utformar, stadfäster, ändrar och upphäver lagar, förordningar och andra författningar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>111</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1516</LocaleGroupID><LocaleCode>1112</LocaleCode><Term>General-, landstings- och kommundirektörer m.fl.</Term><Description>Organiserar, leder och svarar för att politiska beslut verkställs. Planerar, leder och samordnar myndigheters, kommuners och landstings verksamhet. Ger den politiska ledningen råd i sakfrågor.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>111</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1517</LocaleGroupID><LocaleCode>1113</LocaleCode><Term>Chefstjänstemän i intresseorganisationer</Term><Description>Planerar, leder och samordnar verksamhet i intresseorganisationer. Svarar för förhandlingar, intressebevakning och information. Representerar organisationen och dess medlemmar i utredningar, uppvaktningar, remisser och dyl.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>111</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1514</LocaleGroupID><LocaleCode>1120</LocaleCode><Term>Verkställande direktörer m.fl.</Term><Description>Planerar, leder och samordnar verksamhet i företag och affärsverk med stöd från andra chefer, efter riktlinjer fastställda av en styrelse eller ledning. Formulerar och beslutar om mål och policy. Fattar beslut om arbetsorganisation och större investeringar. Representerar företaget i dess förehavanden med andra företag, organisationer och myndigheter. Redovisar resultat till styrelsen eller ledningen.

Hit hör inte
Generaldirektör, myndighet (1112)
Verkställande direktör i företag utan chefshierarki (se respektive verksamhet)
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>112</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1513</LocaleGroupID><LocaleCode>1210</LocaleCode><Term>Ekonomi- och finanschefer</Term><Description>Ansvarar för att upprätta budget samt för redovisning och bokslut. Kontrollerar att verksamhetens resurser används på ett effektivt sätt. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta ekonomiska mål. Redovisar resultat och rapporterar till företagsledningen eller motsvarande. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>121</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1512</LocaleGroupID><LocaleCode>1220</LocaleCode><Term>Personal- och HR-chefer</Term><Description>Ansvarar för strategiska personalfrågor som personalplanering, rekrytering och personalutveckling. Ansvarar för lönepolicy och löneförhandlingar. Svarar för arbetsmiljö- och personalsociala frågor samt tolkning av arbetsrättsliga lagar och avtal. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>122</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1511</LocaleGroupID><LocaleCode>1230</LocaleCode><Term>Förvaltnings- och planeringschefer</Term><Description>Formulerar och ansvarar för mål för strategisk planering och policy inom förvaltnings- och planeringsverksamhet inom organisation eller företag. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>123</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1510</LocaleGroupID><LocaleCode>1240</LocaleCode><Term>Informations-, kommunikations- och PR-chefer</Term><Description>Formulerar och ansvarar för mål och strategier för informationsprogram och kampanjer samt förhandlar reklamkontrakt. Utformar riktlinjer, följer upp och utvärderar verksamhetens uppsatta mål inom information, reklam, kommunikation och PR. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>124</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1509</LocaleGroupID><LocaleCode>1250</LocaleCode><Term>Försäljnings- och marknadschefer</Term><Description>Formulerar och ansvarar för mål och strategier för försäljnings- och marknadsverksamhet. Beslutar om ramar för prissättning, rabatt- och leveransvillkor, försäljningsbudget, specialkampanjer m.m. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål inom försäljning och marknad. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.

Hit hör inte
Butikschef (1730)
Säljande butikschef (5222)
Avdelningschef, butik (5222)
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>125</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1508</LocaleGroupID><LocaleCode>1290</LocaleCode><Term>Övriga administrations- och servicechefer</Term><Description>Formulerar och ansvarar för mål och strategier inom annan administrations- och serviceverksamhet på övriga stabs- och specialistfunktioner. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>129</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1507</LocaleGroupID><LocaleCode>1310</LocaleCode><Term>IT-chefer</Term><Description>Formulerar och ansvarar för mål och strategier inom IT-verksamhet. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål för IT-verksamheten. Ansvarar för anskaffning, utveckling, underhåll och användning av IT-system. Ansvarar för IT-säkerhet. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>131</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1506</LocaleGroupID><LocaleCode>1320</LocaleCode><Term>Inköps-, logistik- och transportchefer</Term><Description>Formulerar och ansvarar för mål och strategier inom inköps-, logistik- och transportverksamhet. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål för inköp, lagring, transporter och distribution. Deltar i förhandlingar med leverantörer, ansvarar för lagerhållning och lagerutnyttjande, svarar för lasthantering. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>132</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1505</LocaleGroupID><LocaleCode>1330</LocaleCode><Term>Forsknings- och utvecklingschefer</Term><Description>Formulerar och ansvarar för mål och strategier för forsknings- och utvecklingsverksamhet. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål för forskning och utveckling. Ansvarar för utvecklingen av tekniska processer, produkter, kunskap eller materialanvändning. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>133</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1504</LocaleGroupID><LocaleCode>1340</LocaleCode><Term>Chefer inom arkitekt- och ingenjörsverksamhet</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom arkitekt- och ingenjörsföretag. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål för försäljning och utförandekvalitet. Beslutar om marknadsföring och förhandlar med större kunder. Deltar i förhandlingar med leverantörer. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>134</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1503</LocaleGroupID><LocaleCode>1350</LocaleCode><Term>Fastighets- och förvaltningschefer</Term><Description>Formulerar och ansvarar för mål och strategier för fastighetsförvaltning och fastighetsskötsel. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>135</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1502</LocaleGroupID><LocaleCode>1360</LocaleCode><Term>Driftchefer inom bygg, anläggning och gruva</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom bygg, anläggning och gruva. Ansvarar för budget, kalkylering, upphandling, inköp, tidsplan samt kontakter med beställare och myndigheter. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Har personalansvar.

Hit hör inte
Arbetsledare inom bygg, anläggning och gruva (3121)</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>136</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1501</LocaleGroupID><LocaleCode>1370</LocaleCode><Term>Produktionschefer inom tillverkning</Term><Description>Formulerar och ansvarar för mål och strategier inom tillverkningsindustri. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Förhandlar med leverantörer, kunder och andra företag. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.

Hit hör inte
Arbetsledare inom tillverkning (3122)</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>137</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1500</LocaleGroupID><LocaleCode>1380</LocaleCode><Term>Förvaltare inom skogsbruk och lantbruk m.fl.</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom skogsbruk eller på större lantbruk. Utformar riktlinjer och följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.

Hit hör inte
Driftchef, jordbruk (6111)
Driftchef, trädgård (6112)


</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>138</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1498</LocaleGroupID><LocaleCode>1410</LocaleCode><Term>Chefer, grund- o gymnasieskola o vuxenutbildning</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom grund- och gymnasieskola samt vuxenutbildning och motsvarande skolform. Planerar och ansvarar för utbildningsverksamhet utifrån styrdokument fastställd av regering, riksdag och skolmyndigheter. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>141</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1499</LocaleGroupID><LocaleCode>1420</LocaleCode><Term>Chefer inom förskoleverksamhet</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom förskolan eller annan omsorg för barn. Planerar och ansvarar för pedagogisk verksamhet. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Ser till att myndighetsregler efterlevs. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>142</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1497</LocaleGroupID><LocaleCode>1490</LocaleCode><Term>Övriga chefer inom utbildning</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom annan utbildningsform än läroplanstyrd verksamhet. Planerar och ansvarar för utbildningsprogram. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>149</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1496</LocaleGroupID><LocaleCode>1510</LocaleCode><Term>Chefer inom hälso- och sjukvård</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom hälso- och sjukvård, inklusive tandvård. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>151</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1495</LocaleGroupID><LocaleCode>1520</LocaleCode><Term>Chefer inom socialt och kurativt arbete</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom socialt och kurativt arbete. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>152</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1494</LocaleGroupID><LocaleCode>1530</LocaleCode><Term>Chefer inom äldreomsorg</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom äldreomsorg. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>153</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1493</LocaleGroupID><LocaleCode>1540</LocaleCode><Term>Chefer och ledare inom trossamfund</Term><Description>Har samordnings- och tillsynsansvar för verksamhet i Svenska kyrkan eller i annat trossamfund. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>154</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1492</LocaleGroupID><LocaleCode>1590</LocaleCode><Term>Övriga chefer inom samhällsservice</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom övrig samhällsservice, t.ex. bibliotek, kultur och rättsväsende. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>159</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1491</LocaleGroupID><LocaleCode>1610</LocaleCode><Term>Chefer inom bank, finans och försäkring</Term><Description>Ansvarar samt formulerar mål och strategier för verksamhet inom bank, finansiella institut och försäkringsbolag. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>161</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1490</LocaleGroupID><LocaleCode>1710</LocaleCode><Term>Hotell- och konferenschefer</Term><Description>Formulerar och ansvarar för mål och strategier för hotell- och konferensverksamhet. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>171</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1489</LocaleGroupID><LocaleCode>1720</LocaleCode><Term>Restaurang- och kökschefer</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom restaurang och kök. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.

Hit hör inte
Köksmästare (3450)
Souschef (3450)

</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>172</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1488</LocaleGroupID><LocaleCode>1730</LocaleCode><Term>Chefer inom handel</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom handel. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar. 

Hit hör inte
Säljande butikschef (5222)
Avdelningschef, butik (5222)
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>173</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1487</LocaleGroupID><LocaleCode>1740</LocaleCode><Term>Chefer inom friskvård, sport och fritid</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom friskvård, sport och fritid. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>174</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1486</LocaleGroupID><LocaleCode>1790</LocaleCode><Term>Övriga chefer inom övrig servicenäring</Term><Description>Formulerar och ansvarar för mål och strategier för verksamhet inom övriga servicenäringar t.ex. camping och resebyrå. Utformar riktlinjer, följer upp och utvärderar verksamheten mot uppsatta mål. Svarar för budget samt fördelar resurserna inom verksamheten. Har personalansvar.
</Description><LocaleFieldID>20</LocaleFieldID><LocaleLevel3Code>179</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1485</LocaleGroupID><LocaleCode>2111</LocaleCode><Term>Fysiker och astronomer</Term><Description>Utvecklar teorier, modeller och metoder som rör materia, rum, tid, energi, krafter och fält samt samverkan mellan dessa fenomen. Utformar praktiska tillämpningar inom fysik, astronomi, och radiofysik. Studerar fenomen, leder experiment, analyserar och värderar data. Utför beräkningar, informerar, inspekterar, samt utfärdar anvisningar och tillstånd.</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>211</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1484</LocaleGroupID><LocaleCode>2112</LocaleCode><Term>Meteorologer</Term><Description>Bearbetar och analyserar insamlade data om luftströmmar, lufttryck, temperatur, fuktighet, fysiska och kemiska förändringar hos föroreningar och andra fenomen. Förbereder och rapporterar kort- eller långsikta väderprognoser. Gör utredningar om atmosfären och klimatet.

Hit hör inte
Meteorologassistent (3216)
Väderobservatörer (9629)
</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>211</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1483</LocaleGroupID><LocaleCode>2113</LocaleCode><Term>Kemister</Term><Description>Utvecklar teorier, modeller och metoder samt utformar praktiska tillämpningar inom kemi. Leder experiment, analyserar och värderar data i laboratoriemiljö. Informerar, ger råd samt utfärdar anvisningar och tillstånd. Utvecklar och provar kemiska produkter och processer. Tar fram dokumentation och handlägger registreringsärenden.
 
Hit hör inte
Apotekare/Farmacevt (2281) 
Farmakolog (2133)
Kemiingenjör (2145)
Laboratorieingenjör, kemi (3215)
Toxikolog (2131)
</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>211</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1482</LocaleGroupID><LocaleCode>2114</LocaleCode><Term>Geologer och geofysiker m.fl.</Term><Description>Utvecklar teorier, modeller, begrepp och metoder samt tillämpar vetenskaplig kunskap inom geologi, geofysik, hydrologi m.m. Undersöker och kartlägger berggrunden, de lösa jordlagren och grundvattnet. Undersöker, beräknar och forskar kring vattenföring, vattenstånd, isförhållanden, vågor m.m. 

Hit hör inte:
Geologassistent (3215)
Geotekniker (2146)
</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>211</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1481</LocaleGroupID><LocaleCode>2121</LocaleCode><Term>Matematiker och aktuarier</Term><Description>Utvecklar och tillämpar matematiska teorier, modeller och metoder. Utvecklar beräkningsmodeller och löser beräkningsproblem. Utformar och förvaltar premie-, pensions- och andra försäkringssystem m.m.

Hit hör inte
Underwriter (3321)
</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>212</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1480</LocaleGroupID><LocaleCode>2122</LocaleCode><Term>Statistiker</Term><Description>Utvecklar och tillämpar statistiska teorier, modeller och metoder. Planerar, utvecklar, bearbetar, framställer, analyserar och presenterar statistiska undersökningar. Gör prognoser. Bearbetar administrativa uppgifter till statistik.
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>212</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1479</LocaleGroupID><LocaleCode>2131</LocaleCode><Term>Cell- och molekylärbiologer m.fl.</Term><Description>Utvecklar teorier, modeller och metoder som behandlar cellens beståndsdelar och struktur. Samlar in och analyserar cellprover för att studera hur molekyler och system i cellen interagerar, hur olika substanser påverkar cellers utveckling och hur processerna regleras. Studerar funktionerna hos olika delar av arvsmassa. Utvecklar och kvalitetssäkrar mikro- och molekylärbiologiska analysmetoder.

Hit hör inte 
Farmakolog (2133)
Biomedicinare (2133)
</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>213</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1478</LocaleGroupID><LocaleCode>2132</LocaleCode><Term>Växt- och djurbiologer</Term><Description>Utvecklar teorier, modeller och metoder som rör levande organismer och deras samspel med varandra och med miljön. Gör artbestämningar och undersöker arters utbredning, levnadsbetingelser och beteenden. Studerar processer och tekniker för agrikulturell och miljöbetingad användning. Utvecklar och kvalitetssäkrar botaniska och zoologiska analysmetoder.

Hit hör inte
Ekolog (2183)
</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>213</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1477</LocaleGroupID><LocaleCode>2133</LocaleCode><Term>Farmakologer och biomedicinare</Term><Description>Utvecklar teorier, modeller och metoder inom farmakologi. Genomför försök, analyserar och värderar information om hur läkemedel och andra ämnen verkar i celler, organ, djur och människor, samt vilken effekt de har. Utvecklar och formar praktiska tillämpningar inom farmaci och medicin. Informerar, ger råd och utfärdar anvisningar om läkemedel.</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>213</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1476</LocaleGroupID><LocaleCode>2134</LocaleCode><Term>Specialister och rådgivare inom lantbruk m.m.</Term><Description>Utvecklar teorier och metoder, samt bedriver försök och ger råd inom agronomi och trädgårdsvetenskap. Analyserar och värderar data. Utvecklar och utformar praktiska tillämpningar inom jordbruk, livsmedelskedjan och trädgårdsodling.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>213</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1475</LocaleGroupID><LocaleCode>2135</LocaleCode><Term>Specialister och rådgivare inom skogsbruk</Term><Description>Bedriver försök och ger råd och upplysningar om skogsbruk, jakt och naturvård. Deltar i produktutveckling, marknadsföring och försäljning. Inventerar viltbestånd och värderar skog samt utarbetar skogsbruksplaner, avverkningsplaner m.m. Bedriver yrkesmässig jakt på vilda djur och skadedjur.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>213</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1468</LocaleGroupID><LocaleCode>2141</LocaleCode><Term>Civilingenjörsyrken, logistik och prod.planering</Term><Description>Utvecklar, leder, planerar och kontrollerar material- och informationsflöden och produktionsplanering. Styr tillverkningsverksamhet och bedömer kostnadseffektivitet. Beslutar tillsammans med marknadsorganisation och kund om tidsplan och produktionsvolym. Planerar och beslutar om leverantörs- och transportkedjan, samt anläggnings- och systemplaner.

Hit hör inte
Yrken inom logistik och produktionsplanering med arbetsuppgifter motsvarande ingenjör- eller teknikernivå (3111)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1469</LocaleGroupID><LocaleCode>2142</LocaleCode><Term>Civilingenjörsyrken inom bygg och anläggning</Term><Description>Utvecklar konstruktionsmetoder, produkter, tjänster och material inom byggnadsteknik samt väg- och vattenbyggnadsteknik. Leder och planerar projekterings- och konstruktionsarbete samt genomförande av bygg- och anläggningsprojekt. Ansvarar för besiktning och kontroller av byggande, material m.m. Utarbetar riktlinjer och metoder för kvalitetssäkring.

Hit hör inte
Yrken inom bygg och anläggning med arbetsuppgifter motsvarande ingenjör- eller teknikernivå (3112)</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1470</LocaleGroupID><LocaleCode>2143</LocaleCode><Term>Civilingenjörsyrken inom elektroteknik</Term><Description>Utvecklar teorier, modeller och metoder inom elektroteknik. Leder projekterings- och konstruktionsarbete som avser elektrotekniska produkter och anläggningar. Svarar för produktion och teknisk utveckling samt för provning och kontroller av elektrotekniska produkter och anläggningar. Undersöker och ger råd om elektrotekniska material, produkter eller processers tekniska aspekter.

Hit hör inte
Yrken inom elektroteknik med arbetsuppgifter motsvarande ingenjör- eller teknikernivå (3113)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1471</LocaleGroupID><LocaleCode>2144</LocaleCode><Term>Civilingenjörsyrken inom maskinteknik</Term><Description>Utvecklar teorier, modeller och metoder inom tillverkningsindustri t.ex. maskin- och fordonsteknik. Leder projekt-, projekterings- och konstruktionsarbete som avser fordon, komponenter, maskiner och annan mekanisk utrustning samt värme-, vatten-, sanitets-, ventilations-, och kylsystem. Ansvarar för besiktning och kontroller. Utarbetar riktlinjer och metoder för kvalitetssäkring.

Hit hör inte
Yrken inom maskinteknik med arbetsuppgifter motsvarande ingenjör- eller teknikernivå (3114)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1472</LocaleGroupID><LocaleCode>2145</LocaleCode><Term>Civilingenjörsyrken inom kemi och kemiteknik</Term><Description>Utvecklar metoder och produkter inom kemi, kemiteknik, livsmedelsteknik m.m. Svarar för produktionsprocess och teknisk utveckling vid tillverkning av petroleumprodukter, kemikalier, kemiska och kemitekniska produkter, läkemedel, syntetiska material eller livsmedel. Ansvarar för kvalitets-, frisläpps- och slutkontroll av kemitekniska produkter.
 
Hit hör inte
- Yrken inom kemi och kemiteknik med arbetsuppgifter motsvarande ingenjör- eller teknikernivå (3115)</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1473</LocaleGroupID><LocaleCode>2146</LocaleCode><Term>Civilingenjörsyrken inom gruvteknik o metallurgi</Term><Description>Utvecklar metoder och produkter inom gruvteknik och metallurgi. Svarar för produktion och teknisk utveckling vid utvinning av metaller, olja och gas eller vid framställning av metaller, legeringar och metallurgiska produkter. Ansvarar för kvalitets- och produktkontroller.

Hit hör inte
Yrken inom gruvteknik och metallurgi med arbetsuppgifter motsvarande ingenjör- eller teknikernivå (3116)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1474</LocaleGroupID><LocaleCode>2149</LocaleCode><Term>Övriga civilingenjörsyrken</Term><Description>Utför annat specialistarbete än inom 2141-2146. Exempel på arbetsuppgifter: Utvecklar metoder och produkter samt ansvarar för produktion och teknisk utveckling vid tillverkning av metall-, glas-, keramik, pappers-, läder, textil- och träprodukter. Ansvarar för kvalitets- och produktkontroller.</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>214</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1467</LocaleGroupID><LocaleCode>2161</LocaleCode><Term>Arkitekter m.fl.</Term><Description>Utformar, projekterar och ritar nyproduktion av byggnader samt om- och tillbyggnad. Utformar planer och underlag till planer. Väger samman funktionella, tekniska, ekonomiska, miljötekniska och estetiska krav och önskemål till en fungerande helhetslösning i dialog med uppdragsgivare. Utformar den inre miljön t.ex. privata hem, offentliga lokaler och kontor. Gör materialsammanställningar. Utarbetar förslag i form av modeller, texter och ritningar. 

Hit hör inte
Inredare (3432)
Dekoratör (3432)</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>216</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1466</LocaleGroupID><LocaleCode>2162</LocaleCode><Term>Landskapsarkitekter</Term><Description>Utformar och projekterar yttre miljö t.ex. torg, gator, bostadsområden, parker, lekplatser och trädgårdar. Väger samman naturresursbevarande aspekter med funktionella, tekniska, ekonomiska och estetiska krav och önskemål till en fungerande helhetslösning i dialog med uppdragsgivare. Gör växt- och materialsammanställningar. Utarbetar förslag i form av modeller, texter och ritningar.
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>216</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1465</LocaleGroupID><LocaleCode>2163</LocaleCode><Term>Planeringsarkitekter m.fl.</Term><Description>Upprättar, utarbetar och granskar planer för nya stadsdelar, bostadsområden, industriområden samt översiktliga planer och program för utveckling av fysisk miljö. Planerar för förnyelse och förändring av befintliga områden. Väger samman funktionella, tekniska, ekonomiska, miljötekniska och estetiska krav och önskemål till en fungerande helhetslösning i dialog med uppdragsgivare och myndigheter. Utarbetar förslag i form av modeller, texter och ritningar.</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>216</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1464</LocaleGroupID><LocaleCode>2164</LocaleCode><Term>Lantmätare</Term><Description>Handlägger tekniska, ekonomiska och juridiska frågor i samband med fastighetsbildning. Svarar för värdering och registrering av fastigheter. Ansvarar för mätnings- och kartläggningsarbete samt för framställning och uppdatering av kartor. Analyserar flyg- och satellitbilder. Ger råd bl.a. vid fastighetsbildning, mark- och fastighetsvärdering samt vid samverkan mellan fastigheter.

Hit hör inte
Kartingenjör (3117)
Mätningsingenjör/MBK-ingenjör (3112) 
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>216</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1463</LocaleGroupID><LocaleCode>2171</LocaleCode><Term>Industridesigner</Term><Description>Utreder, analyserar, designar och utvecklar produkter för tillverkning. Fastställer mål och restriktioner för designuppdraget i samråd med kunder och intressenter. Samordnar tekniska, ekonomiska och estetiska förutsättningar. Förbereder design och specifikationer för tillverkning.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>217</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1462</LocaleGroupID><LocaleCode>2172</LocaleCode><Term>Grafisk formgivare m.fl.</Term><Description>Designar och formger tryckt publikation och media. Fastställer mål och restriktioner för designuppdraget genom samråd med kunder och intressenter.

Hit hör inte
Informatör (2432)
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>217</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1461</LocaleGroupID><LocaleCode>2173</LocaleCode><Term>Designer inom spel och digitala medier</Term><Description>Designar, formger och utvecklar digital och elektronisk media. Skapar specialeffekter, animering och andra audiovisuella rörliga bilder för dataspel, film, video m.m. Fastställer mål och restriktioner för designuppdraget genom samråd med kunder, intressenter och den egna organisationen.
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>217</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1460</LocaleGroupID><LocaleCode>2179</LocaleCode><Term>Övriga designer och formgivare</Term><Description>Utför annat design- och utvecklingsarbete än inom 2171-2173. Exempel på arbetsuppgifter: Designar och utvecklar mode-, kläd-, textil-, smyckes- och glasprodukter. Fastställer mål och restriktioner för designuppdraget genom samråd med kunder och intressenter.
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>217</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1457</LocaleGroupID><LocaleCode>2181</LocaleCode><Term>Arbetsmiljöingenjörer, yrkes- o miljöhygieniker</Term><Description>Inspekterar arbetsplatser för att kontrollera att arbetsmiljölagen och gällande föreskrifter följs. Kartlägger och analyserar arbetsmiljö för att garantera och stärka hälsosamma arbetsförhållanden. Mäter hälsorisker och utreder arbetsskador. Informerar om risker samt föreslår och genomför lösningar för att förebygga sjukdom eller skada.
</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>218</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1458</LocaleGroupID><LocaleCode>2182</LocaleCode><Term>Miljö- och hälsoskyddsinspektörer</Term><Description>Kontrollerar att lagar och föreskrifter om miljö-, hälso- och djurskydd samt för livsmedel efterlevs. Gör utredningar, undersökningar, inspektioner och mätningar. Granskar olika verksamheter och arbetsrutiner ur miljösynpunkt samt utarbetar förbättringsförslag.</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>218</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1459</LocaleGroupID><LocaleCode>2183</LocaleCode><Term>Specialister inom miljöskydd och miljöteknik</Term><Description>Undersöker miljön och utvecklar planer och lösningar för att skydda, bevara, återställa, minimera och förebygga skador på miljön. Undersöker, bedömer och rapporterar om byggnads- och konstruktionsprojekts påverkan på miljön. Inspekterar industriella och offentliga anläggningar och program för att utvärdera drifteffektivitet och garantera att miljöföreskrifterna följs.</Description><LocaleFieldID>14</LocaleFieldID><LocaleLevel3Code>218</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1456</LocaleGroupID><LocaleCode>2211</LocaleCode><Term>Specialistläkare</Term><Description>Undersöker patienter inom sin specialistkompetens, ställer diagnoser och gör behandlingsplaner. Utför operationer och andra behandlingar, utvecklar teorier och metoder m.m.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>221</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1455</LocaleGroupID><LocaleCode>2212</LocaleCode><Term>ST-läkare</Term><Description>Gör en tidsbegränsad specialisttjänstgöring bestående av utbildning samt läkararbete under handledning. Undersöker patienter, ställer diagnoser och gör behandlingsplaner.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>221</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1454</LocaleGroupID><LocaleCode>2213</LocaleCode><Term>AT-läkare</Term><Description>Gör en tidsbegränsad allmäntjänstgöring bestående av utbildning samt läkararbete under handledning. Undersöker patienter, ställer diagnoser och gör behandlingsplaner.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>221</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1453</LocaleGroupID><LocaleCode>2219</LocaleCode><Term>Övriga läkare</Term><Description>Undersöker patienter, ställer diagnoser och gör behandlingsplaner. Utför operationer och andra behandlingar, utvecklar teorier och metoder m.m.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>221</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1452</LocaleGroupID><LocaleCode>2221</LocaleCode><Term>Grundutbildade sjuksköterskor</Term><Description>Behandlar och vårdar samt ansvarar för den medicinska omvårdnaden och läkemedelshantering.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1451</LocaleGroupID><LocaleCode>2222</LocaleCode><Term>Barnmorskor</Term><Description>Har vårdansvar vid förlossningar. Vårdar nyblivna mammor och barn på sjukhusens förlossnings- och BB-avdelningar samt mödravårdscentraler. Gör hälsoundersökningar samt svarar för föräldrautbildning. Informerar om sex och samlevnad samt skriver ut preventivmedel.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1450</LocaleGroupID><LocaleCode>2223</LocaleCode><Term>Anestesisjuksköterskor</Term><Description>Söver eller lokalbedövar patienter som ska opereras. Övervakar, bedömer och säkerställer god andning och cirkulation hos patienten under operation.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1449</LocaleGroupID><LocaleCode>2224</LocaleCode><Term>Distriktssköterskor</Term><Description>Svarar för öppen hälso- och sjukvård inom ett geografiskt område. Ger råd och behandlingar på egen mottagning eller vid hembesök. Gör bedömningar av patienters hälso- och sjukdomstillstånd och vårdbehov.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1448</LocaleGroupID><LocaleCode>2225</LocaleCode><Term>Psykiatrisjuksköterskor</Term><Description>Behandlar och vårdar patienter inom psykiatrisk vård på avdelning, mottagning, behandlingshem m.m.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1447</LocaleGroupID><LocaleCode>2226</LocaleCode><Term>Ambulanssjuksköterskor m.fl.</Term><Description>Vårdar patienter med akuta sjukdomar och skador. Har det medicinska ansvaret i en ambulans.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1446</LocaleGroupID><LocaleCode>2227</LocaleCode><Term>Geriatriksjuksköterskor</Term><Description>Ger omvårdnad till äldre människor för att förebygga och behandla åldersrelaterade sjukdomar.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1445</LocaleGroupID><LocaleCode>2228</LocaleCode><Term>Intensivvårdssjuksköterskor</Term><Description>Vårdar patienter med svåra sjukdomstillstånd på intensivvårdsavdelning och postoperativa avdelningar.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>222</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1444</LocaleGroupID><LocaleCode>2231</LocaleCode><Term>Operationssjuksköterskor</Term><Description>Samordnar och leder arbetet i en operationssal och ansvarar för omvårdnad av patienter. Ställer i ordning och kontrollerar medicinteknisk apparatur och utrustning samt ansvarar för hygien och aseptik.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>223</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1443</LocaleGroupID><LocaleCode>2232</LocaleCode><Term>Barnsjuksköterskor</Term><Description>Vårdar och behandlar sjuka och skadade barn och ungdomar inom akutsjukvård, barnmedicin, barnkirurgi, spädbarnsvård eller på barnavårdscentral. Ger råd och stöd till föräldrar samt genomför hälsokontroller.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>223</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1442</LocaleGroupID><LocaleCode>2233</LocaleCode><Term>Skolsköterskor</Term><Description>Arbetar med förebyggande hälsovård inom skola. Följer elevernas hälsoutveckling genom regelbundna hälsokontroller.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>223</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1441</LocaleGroupID><LocaleCode>2234</LocaleCode><Term>Företagssköterskor</Term><Description>Medverkar vid rehabilitering och omhändertagande av arbetsrelaterade sjukdomar inom företagshälsovården. Förebygger sjukdomar och arbetsskador.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>223</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1440</LocaleGroupID><LocaleCode>2235</LocaleCode><Term>Röntgensjuksköterskor</Term><Description>Utför röntgenundersökningar eller andra radiologiska undersökningar inför diagnostik och behandling. Ställer i ordning och kontrollerar medicinteknisk apparatur och utrustning.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>223</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1439</LocaleGroupID><LocaleCode>2239</LocaleCode><Term>Övriga specialistsjuksköterskor</Term><Description>Utför annat specialistarbete för sjuksköterskor än inom 2221-2235. Till exempel inom ögonvård, onkologi m.m. Planerar och samordnar det praktiska vårdarbetet på kliniknivå och mellan olika huvudmän.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>223</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1438</LocaleGroupID><LocaleCode>2241</LocaleCode><Term>Psykologer</Term><Description>Undersöker, utreder, diagnostiserar och behandlar människors psykiska funktioner, besvär och sjukdomar. Ger råd och vägledning i konfliktlösning. Ger stöd vid organisationsförändringar, ledarskapsutveckling och personalförsörjning m.m. Utvecklar teorier, modeller och metoder inom psykologi och psykoanalys.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>224</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1437</LocaleGroupID><LocaleCode>2242</LocaleCode><Term>Psykoterapeuter</Term><Description>Ger psykoterapeutisk eller psykoanalytisk behandling genom samtal med individer, familjer eller grupper. Undersöker psykiska problem, kartlägger hinder och möjligheter till lösningar.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>224</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1436</LocaleGroupID><LocaleCode>2250</LocaleCode><Term>Veterinärer</Term><Description>Undersöker, ställer diagnos och behandlar sjuka och skadade djur. Ger råd om djurhälsovård och avel. Kontrollerar djurbesättningar och slaktdjur. Ger råd och kontrollerar livsmedelshygien, djurskydd, smittskydd och import av djur och livsmedel.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>225</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1435</LocaleGroupID><LocaleCode>2260</LocaleCode><Term>Tandläkare</Term><Description>Förebygger, diagnostiserar och behandlar sjukdomar och skador i munhåla och käksystem. Undersöker och följer upp utveckling och tillväxt av tänder och käkar. Lägger upp preventions- och behandlingsplaner, lagar tänder, behandlar tandställningsfel samt utför tandoperationer. Informerar, ger råd och utfärdar anvisningar om egenbehandling och preventiv tandvård. Utvecklar teorier och metoder inom tandläkarvetenskapen.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>226</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1434</LocaleGroupID><LocaleCode>2271</LocaleCode><Term>Kiropraktorer och naprapater m.fl.</Term><Description>Undersöker, diagnostiserar och behandlar i syfte att återställa normal funktion i leder, muskler och nervsystem. Behandlar ryggbesvär, muskelbesvär, huvudvärk, nackspärr, ischias, idrottsskador och arbetsrelaterade besvär m.m. Återställer funktionen och lindrar smärta genom manuella tekniker som manipulation, stretching och massage.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>227</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1433</LocaleGroupID><LocaleCode>2272</LocaleCode><Term>Fysioterapeuter och sjukgymnaster</Term><Description>Undersöker, diagnostiserar och behandlar patienter som har eller riskerar att få funktionsnedsättningar till följd av sjukdomar eller skador i olika organsystem, t.ex. andningsorgan, cirkulationssystem, nervsystem, rörelseorgan och psykisk ohälsa.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>227</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1432</LocaleGroupID><LocaleCode>2273</LocaleCode><Term>Arbetsterapeuter</Term><Description>Förebygger, förbättrar och kompenserar nedsatt aktivitetsförmåga. Tränar fysiska och psykiska förmågor samt förändrar arbetsmetoder. Föreskriver och anpassar hjälpmedel, t.ex. IT-baserade hjälpprogram, specialdesignade redskap m.m. Medverkar i frågor om tillgänglighet i den fysiska miljön, t.ex. anpassning av bostad, arbetsplats och skola.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>227</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1431</LocaleGroupID><LocaleCode>2281</LocaleCode><Term>Apotekare</Term><Description>Forskar inom, tillverkar, kontrollerar, marknadsför och säljer läkemedel inom exempelvis apotek, läkemedelsindustri och sjukhus. Informerar allmänheten och vårdpersonal om läkemedlets effekter och användning.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>228</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1430</LocaleGroupID><LocaleCode>2282</LocaleCode><Term>Dietister</Term><Description>Informerar, ger råd om och undervisar i närings- och kostfrågor. Utreder patienters sjukdomsbild och matvanor samt utarbetar kostförslag. Medverkar i forsknings- och utvecklingsprojekt kring kost och hälsa.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>228</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1429</LocaleGroupID><LocaleCode>2283</LocaleCode><Term>Audionomer och logopeder</Term><Description>Utreder och bedömer hörselbesvär och anpassar hörhjälpmedel. Informerar och utbildar om hörselsvårigheter. Undersöker, ställer diagnos och behandlar röst-, tal- och språkstörningar. Leder träning och ordinerar kommunikationshjälpmedel.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>228</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1428</LocaleGroupID><LocaleCode>2284</LocaleCode><Term>Optiker</Term><Description>Gör synundersökningar, ordinerar och provar ut glasögon, kontaktlinser och synhjälpmedel. Reparerar glasögon. Säljer glasögon, kontaktlinser och andra synhjälpmedel.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>228</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1427</LocaleGroupID><LocaleCode>2289</LocaleCode><Term>Övriga specialister inom hälso- och sjukvård</Term><Description>Utför annat specialistarbete inom hälso- och sjukvård än inom 2241-2284. Exempel på arbetsuppgifter: Behandlar, rehabiliterar och arbetar förebyggande med hjälp av bild-, dans- och musikterapi. Diagnostiserar och behandlar sjukdomstillstånd och skador i fot och vrist.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>228</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1426</LocaleGroupID><LocaleCode>2311</LocaleCode><Term>Professorer</Term><Description>Har ämnesansvar och övergripande ansvar för utbildnings- och forskningsverksamhet inom ämnet. Leder, genomför och utvecklar utbildning på alla nivåer inom högskola och universitet. Handleder forskarstuderande, leder forskargrupper och bedriver forskning. Utför sakkunniguppdrag.
</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>231</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1425</LocaleGroupID><LocaleCode>2312</LocaleCode><Term>Universitets- och högskolelektorer</Term><Description>Undervisar samt deltar i utvecklingen av grund- och forskarutbildning. Handleder och examinerar studerande inom grundutbildning. Handleder doktorander. Deltar i internt ledningsarbete. Planerar och genomför forskningsverksamhet.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>231</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1424</LocaleGroupID><LocaleCode>2313</LocaleCode><Term>Forskarassistenter m.fl.</Term><Description>Planerar, genomför och leder forskningsverksamhet. Medverkar i undervisning.

Hit hör inte
Forskarassistent utan uppgift att undervisa (ingår i yrke inom respektive inriktning)
</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>231</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1423</LocaleGroupID><LocaleCode>2314</LocaleCode><Term>Doktorander</Term><Description>Forskar inom ett ämnesområde. Medverkar i undervisning inom grundutbildning.

Hit hör inte
Doktorand som bedriver sitt forskningsarbete utanför högskolan (ingår i yrke inom respektive inriktning)
</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>231</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1422</LocaleGroupID><LocaleCode>2319</LocaleCode><Term>Övriga universitets- och högskollärare</Term><Description>Utför annat undervisningsarbete inom högskola och universitet än inom 2311-2314. Exempel på arbetsuppgifter: Undervisar, handleder samt examinerar inom grundutbildningen. Deltar i utvecklingen av utbildningen inom området.
</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>231</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1421</LocaleGroupID><LocaleCode>2320</LocaleCode><Term>Lärare i yrkesämnen</Term><Description>Undervisar på gymnasial och eftergymnasial nivå i yrkesämnen. Planerar, genomför och utvärderar undervisningen i enlighet med läro- och ämnesplaner. Utför bedömning och betygsättning.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>232</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1420</LocaleGroupID><LocaleCode>2330</LocaleCode><Term>Gymnasielärare</Term><Description>Undervisar på gymnasial nivå i teoretiska och praktisk-estetiska ämnen. Planerar, genomför och utvärderar undervisningen i enlighet med läro- och ämnesplaner. Utför bedömning och betygsättning.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>233</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1419</LocaleGroupID><LocaleCode>2341</LocaleCode><Term>Grundskollärare</Term><Description>Undervisar i grundskolan. Planerar, genomför och utvärderar undervisningen i grundskola i enlighet med läro- och kursplaner. Utför bedömning och betygsättning.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>234</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1418</LocaleGroupID><LocaleCode>2342</LocaleCode><Term>Fritidspedagoger</Term><Description>Planerar och organiserar fritidsaktiviteter för skolelever 6-12 år i fritidshem eller öppen fritidsverksamhet. Medverkar i pedagogisk verksamhet i skolklasser.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>234</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1417</LocaleGroupID><LocaleCode>2343</LocaleCode><Term>Förskollärare</Term><Description>Undervisar och organiserar aktiviteter i förskola eller i förskoleklass. Planerar och genomför undervisning i enlighet med läroplan.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>234</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1408</LocaleGroupID><LocaleCode>2351</LocaleCode><Term>Speciallärare och specialpedagoger m.fl.</Term><Description>Undervisar elever med behov av särskilt stöd i förskola och förskoleklass samt grund- och gymnasieskola. Anpassar undervisningen efter elevernas förutsättningar och använder speciella hjälpmedel och arbetsmetoder. Ger specialpedagogiskt stöd till lärare och utvecklar undervisningsmetodik. Utvärderar och inspekterar tillämpningen av skollag, läroplaner och förordningar.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>235</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1407</LocaleGroupID><LocaleCode>2352</LocaleCode><Term>Studie- och yrkesvägledare</Term><Description>Informerar och ger råd till studerande om studieval, yrken och yrkesval. Organiserar elevernas arbetsplatspraktik.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>235</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1321</LocaleGroupID><LocaleCode>2359</LocaleCode><Term>Övr. pedagoger med teoretisk specialistkompetens</Term><Description>Utför annat pedagogiskt arbete än inom 2320-2352. Exempel på arbetsuppgifter: Undervisar på musikskolor eller inom konst, musik, teater och dans. Planerar, genomför och utvärderar undervisning i svenska för invandrare.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>235</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1416</LocaleGroupID><LocaleCode>2411</LocaleCode><Term>Revisorer m.fl.</Term><Description>Utreder, granskar och bedömer företags, organisationers och myndigheters redovisning och förvaltning. Ger råd i boksluts-, redovisnings-, skatte-, finansierings- och försäkringsfrågor. Leder företags eller grupp av företags ekonomistyrning. Ansvarar för uppläggning och uppföljning av budget samt analyserar resultat. Bedömer om ledningens intentioner följs och om företagets resurser utnyttjas effektivt. Granskar och utvärderar företagets rutiner och interna kontroll. 

Hit hör inte
Redovisningskonsult (3313)</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>241</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1415</LocaleGroupID><LocaleCode>2412</LocaleCode><Term>Controller</Term><Description>Analyserar, följer upp och bevakar företags, organisationers och myndigheters resultat, lönsamhet, verksamhetsplan och hållbarhetsstrategier. Formulerar mål, gör prognoser och anger riktlinjer för ekonomiarbetet. Utvecklar planerings- och uppföljningssystem.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>241</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1414</LocaleGroupID><LocaleCode>2413</LocaleCode><Term>Finansanalytiker och investeringsrådgivare m.fl.</Term><Description>Analyserar bolagens ekonomi, ekonomiska förutsättningar och framtidsutsikter samt affärsmöjligheter. Utvecklar finans- och investeringsstrategier för kunder. Ger råd till enskilda personer, företag och organisationer inom sparande, investeringar och försäkring samt vid köp och försäljning av värdepapper. Analyserar och utvärderar placeringsalternativ, aktier eller obligationer samt arbetar med portföljförvaltning. Lämnar råd och handlägger skatteärenden, bolagsbildning, köp och försäljning av exempelvis fast egendom. 

Hit hör inte
Mäklare inom finans (3311)</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>241</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1413</LocaleGroupID><LocaleCode>2414</LocaleCode><Term>Traders och fondförvaltare</Term><Description>Förvaltar, köper samt säljer aktier, obligationer och andra värdepapper. Sätter upp finansiella mål och utvecklar strategier för att nå dem. Förvaltar fonder. Övervakar resultat från investeringar, granskar och reviderar investeringsplaner utifrån behov och förändringar på marknaden.

Hit hör inte
Mäklare inom finans (3311)
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>241</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1412</LocaleGroupID><LocaleCode>2415</LocaleCode><Term>Nationalekonomer och makroanalytiker m.fl.</Term><Description>Studerar, analyserar, utvecklar och förklarar ekonomiska drivkrafter utifrån nationalekonomiska teorier och modeller. Jämför samhällsekonomiska teorier och modeller för att analysera och prognostisera beteenden och fenomen på individ-, företags- och samhällsnivå exempelvis arbetslöshet, inflation, investeringar och ekonomisk tillväxt. Analyserar stora världshändelser och länders förhållanden. Föreslår och värderar utfallet av politiska reformer och åtgärder. Utvecklar nya ekonomiska modeller.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>241</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1411</LocaleGroupID><LocaleCode>2419</LocaleCode><Term>Övriga ekonomer</Term><Description>Utför annat ekonomiskt specialistarbete än inom 2411-2415. Exempel på arbetsuppgifter: Budget- och skuldrådgivning, fastighetsvärdering m.m.

Hit hör inte
Fastighetsmäklare (3334)
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>241</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1410</LocaleGroupID><LocaleCode>2421</LocaleCode><Term>Lednings- och organisationsutvecklare</Term><Description>Utreder företags och organisationers verksamhet. Föreslår och planerar åtgärder för att utveckla och rationalisera verksamheten.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>242</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1409</LocaleGroupID><LocaleCode>2422</LocaleCode><Term>Planerare och utredare m.fl.</Term><Description>Planerar, utreder och handlägger ärenden inom offentlig sektor, företag och organisationer. Utarbetar rapporter, utredningar m.m. Utformar direktiv och förordningar samt utövar tillsyn.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>242</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1406</LocaleGroupID><LocaleCode>2423</LocaleCode><Term>Personal- och HR-specialister</Term><Description>Planerar och organiserar rekrytering, utveckling omplacering och avveckling av personal. Upprättar personalbudget och utbildningsplaner. Deltar i förhandlingar om löner, anställningsvillkor samt tolkar och informerar om arbetsrättsliga lagar och avtal.

Hit hör inte
Personalansvarig (2423)</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>242</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1405</LocaleGroupID><LocaleCode>2431</LocaleCode><Term>Marknadsanalytiker och marknadsförare m.fl.</Term><Description>Utvecklar, planerar och samordnar reklamkampanjer och marknadsföringsstrategier. Samlar in, bearbetar och analyserar data om marknader. Gör prognoser om framtida marknader och trender samt ger råd om försäljningsstrategier. Bedömer marknaden för nya varor och tjänster. Identifierar och utvecklar marknadsmöjligheter för nya och befintliga varor och tjänster.
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>243</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1404</LocaleGroupID><LocaleCode>2432</LocaleCode><Term>Informatörer, kommunikatörer och PR-specialister</Term><Description>Planerar, utvecklar, genomför och utvärderar informations- och kommunikationsstrategier om företags eller organisations mål, policy, verksamhet, resultat och aktuella händelser. Utformar informationsinnehåll.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>243</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1403</LocaleGroupID><LocaleCode>2511</LocaleCode><Term>Systemanalytiker och IT-arkitekter m.fl.</Term><Description>Tar fram strategier för utveckling av IT-system. Ansvarar för företags och organisationers IT-struktur och ser till att IT används på ett effektivt sätt. Ansvarar för att den tekniska arkitekturen understödjer verksamhetens behov och krav.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1402</LocaleGroupID><LocaleCode>2512</LocaleCode><Term>Mjukvaru- och systemutvecklare m.fl.</Term><Description>Analyserar, designar och utvecklar IT-system eller delar av system. Utformar och utvecklar lösningar för programvara, applikationer, system och databaser.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1401</LocaleGroupID><LocaleCode>2513</LocaleCode><Term>Utvecklare inom spel och digitala media</Term><Description>Utvecklar och programmerar spel och andra interaktiva medier som innefattar grafik och digitala animationer.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1400</LocaleGroupID><LocaleCode>2514</LocaleCode><Term>Systemtestare och testledare</Term><Description>Planerar, utvecklar, dokumenterar och genomför tester på olika nivåer, från enskilda programvaror till hela system. Verifierar att program och system fungerar enligt användarkrav, fastställda riktlinjer och regelverk.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1399</LocaleGroupID><LocaleCode>2515</LocaleCode><Term>Systemförvaltare m.fl.</Term><Description>Ansvarar för och sköter IT-system som är i drift. Underhåller och förbättrar IT-system.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1398</LocaleGroupID><LocaleCode>2516</LocaleCode><Term>IT-säkerhetsspecialister</Term><Description>Ansvarar för IT-säkerheten i företag och organisationer. Gör risk- och sårbarhetsanalyser. Utformar säkerhetslösningar och IT-säkerhetssystem utifrån verksamhetens behov.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1397</LocaleGroupID><LocaleCode>2519</LocaleCode><Term>Övriga IT-specialister</Term><Description>Utför annat specialistarbete inom IT än inom 2511-2516. Exempel på arbetsuppgifter: Planerar och lägger upp strategier för hur informationsteknik eller datateknik ska användas på ett företag eller i en organisation. Forskar inom IT.
</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>251</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1396</LocaleGroupID><LocaleCode>2611</LocaleCode><Term>Advokater</Term><Description>Tolkar lagar och avtal. Förbereder processer och företräder part vid tvist och förhandling. För parts talan i domstol. Ger råd och upprättar juridiska handlingar.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>261</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1395</LocaleGroupID><LocaleCode>2612</LocaleCode><Term>Domare</Term><Description>Tolkar lagar och avtal. Bereder, föredrar och handlägger ärenden och mål samt bestämmer rättegångsordning. Dömer mål i allmän domstol, förvaltningsdomstol eller specialdomstol. Skriver domar och beslut.
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>261</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1394</LocaleGroupID><LocaleCode>2613</LocaleCode><Term>Åklagare</Term><Description>Utreder brott tillsammans med polis, leder förundersökningar och beslutar om åtal. Beskriver brott, håller förhör och föreslår straff i rätten.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>261</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1393</LocaleGroupID><LocaleCode>2614</LocaleCode><Term>Affärs- och företagsjurister</Term><Description>Tolkar lagar samt formulerar och granskar avtal och andra juridiska handlingar. Ser till att avtal och kontrakt är juridiskt bindande och följer de lagar och bestämmelser som finns på området. Företräder klienter i juridiska frågor och vid förhandlingar. Förbereder processer och företräder klient inför domstol. Utformar försäkringsvillkor.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>261</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1392</LocaleGroupID><LocaleCode>2615</LocaleCode><Term>Förvaltnings- och organisationsjurister</Term><Description>Tolkar lagar och avtal som företrädare för t.ex. myndigheter, kommuner och organisationer. Bevakar ny lagstiftning. Ser till att den lagstiftning som finns på området följs. Skriver föreskrifter och allmänna råd utifrån de lagtexter som finns. Svarar på remisser.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>261</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1391</LocaleGroupID><LocaleCode>2619</LocaleCode><Term>Övriga jurister</Term><Description>Utför annat juridiskt specialistarbete än inom 2611-2615. Exempel på arbetsuppgifter: Ansvarar för indrivning av skatter, böter och andra allmänna medel samt verkställande av domar och beslut i enskilda mål. Handlägger juridiska ärenden inom försvaret eller kyrkan. Tar fram föreskrifter och ger råd i hur man ska tolka miljölagar och förordningar. Genomför förhandlingar och utför juridisk rådgivning.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>261</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1390</LocaleGroupID><LocaleCode>2621</LocaleCode><Term>Museiintendenter m.fl.</Term><Description>Planerar och organiserar verksamhet på museer och konstgallerier samt ordnar utställningar och visar samlingar. Samlar in, undersöker, bedömer, klassificerar och dokumenterar miljöer eller föremål av kulturhistoriskt värde. Vårdar, förmedlar kunskap och ger råd om föremål.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>262</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1389</LocaleGroupID><LocaleCode>2622</LocaleCode><Term>Bibliotekarier och arkivarier</Term><Description>Planerar och organiserar biblioteksverksamhet. Bedömer, köper in och klassificerar böcker, tidskrifter och andra typer av publicerat material. Erbjuder fördjupad litteratur- och informationsförmedling samt vägleder bibliotekets användare i informationssökning. Söker, bearbetar och presenterar information. Samlar in, undersöker, bedömer och ordnar handlingar. Värderar och bedömer vilken information som ska sparas för framtiden.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>262</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1388</LocaleGroupID><LocaleCode>2623</LocaleCode><Term>Arkeologer och specialister inom humaniora m.m.</Term><Description>Studerar människors kultur och livsbetingelser med hjälp av fynd och föremål från forntida boplatser, gravar m.m. Leder och organiserar arkeologiska utgrävningar. Studerar och tolkar urkunder, sociala samt rumsliga fenomen. Utvecklar teorier, modeller och metoder, bl.a. för att tolka och beskriva händelser, kulturella och ekonomiska förhållanden. Genomför experiment, analyserar och värderar data. Undersöker sociala strukturer och beteenden hos olika grupper i samhället, föreslår och värderar utfallet av socialpolitiska åtgärder och utvecklar teorier och modeller för politiska system och institutioner.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>262</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1387</LocaleGroupID><LocaleCode>2641</LocaleCode><Term>Författare m.fl.</Term><Description>Planerar och gör research för och skriver exempelvis böcker, manus och pjäser för publicering eller presentation. Korrekturläser och redigerar texter.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>264</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1386</LocaleGroupID><LocaleCode>2642</LocaleCode><Term>Journalister m.fl.</Term><Description>Samlar lokala, nationella och internationella nyheter med hjälp av intervjuer, undersökningar och observationer för tidningar, TV, radio och andra media. Redigerar artiklar och inslag. Granskar och bevakar uppgifter av allmänintresse. Undersöker och rapporterar om utvecklingen inom speciella områden, såsom medicin, vetenskap och teknik. Skriver ledare och kommentarer samt gör inslag om aktuella ämnen och uttrycker en tidnings, radio- eller TV-kanals åsikt.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>264</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1385</LocaleGroupID><LocaleCode>2643</LocaleCode><Term>Översättare, tolkar och lingvister m.fl.</Term><Description>Översätter text eller tal från ett språk till ett annat. Språkgranskar texter. Utarbetar lexikon. Utvecklar teorier och modeller om språks uppbyggnad och egenskaper. Undersöker och beskriver ett språks ursprung och utvecklingen av dess ordförråd, grammatik och syntax.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>264</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1384</LocaleGroupID><LocaleCode>2651</LocaleCode><Term>Bildkonstnärer m.fl.</Term><Description>Skapar konst i olika former t.ex. måleri, grafik, teckning och skulptur, video och film, relationell konst, objekt, installation, miljögestaltning, performance, ljuskonst m.m. Vårdar, konserverar, restaurerar och preparerar föremål och material. Gör bokomslag, bokillustrationer, skisser till kläder m.m.
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>265</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1383</LocaleGroupID><LocaleCode>2652</LocaleCode><Term>Musiker, sångare och kompositörer</Term><Description>Framför klassisk musik, populär- eller kyrkomusik som sångare eller instrumentmusiker. Komponerar musikaliska verk, leder och instruerar orkestrar, körer m.m.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>265</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1382</LocaleGroupID><LocaleCode>2653</LocaleCode><Term>Koreografer och dansare</Term><Description>Skapar och utformar konstnärlig dans. Tränar in och uppträder i dansuppsättningar.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>265</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1381</LocaleGroupID><LocaleCode>2654</LocaleCode><Term>Regissörer och producenter av film, teater m.m.</Term><Description>Regisserar teater-, film-, TV- och radioproduktion m.m. Sätter upp föreställningar och leder repetitioner och inspelningar.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>265</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1380</LocaleGroupID><LocaleCode>2655</LocaleCode><Term>Skådespelare</Term><Description>Gestaltar roller i teater-, film-, TV- och radioproduktion m.m. Läser och reciterar litterära verk.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>265</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1377</LocaleGroupID><LocaleCode>2661</LocaleCode><Term>Socialsekreterare</Term><Description>Utreder individers, familjers och gruppers sociala och ekonomiska problem eller samlevnadsproblem. Kartlägger hjälpbehov och insatser, ger råd och stöd samt utövar tillsyn. Gör utredningar om umgängesrätt vid vårdnadstvist.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>266</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1376</LocaleGroupID><LocaleCode>2662</LocaleCode><Term>Kuratorer</Term><Description>Ger information om samhällets olika möjligheter att ge hjälp och stöd till människor i behov av råd, stöd och hjälp. Undersöker olika lösningar för att förbättra hjälpsökandes livssituation.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>266</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1375</LocaleGroupID><LocaleCode>2663</LocaleCode><Term>Biståndsbedömare m.fl.</Term><Description>Utreder individers behov av hjälp och stöd från kommunen t.ex. hemtjänst, personlig assistans eller särskilt boende m.m.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>266</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1374</LocaleGroupID><LocaleCode>2669</LocaleCode><Term>Övriga yrken inom socialt arbete</Term><Description>Utför annat socialt arbete än inom 2661-2663. Exempel på arbetsuppgifter: Handlägger mottagande och introduktion av nyanlända i kommun. Gör personutredningar och deltar i utslussningen vid intagnas återanpassning till samhället.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>266</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1379</LocaleGroupID><LocaleCode>2671</LocaleCode><Term>Präster</Term><Description>Leder och planerar församlingsarbete i Svenska kyrkan eller annat trossamfund utom frikyrkoförsamlingar. Leder gudstjänst eller mässa samt predikar och förrättar altartjänst. Förrättar dop, vigslar och begravningar. Uttolkar heliga skrifter samt ansvarar för kyrkans lära och undervisar i trosfrågor. Mottar bikt och utövar själavård.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>267</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1378</LocaleGroupID><LocaleCode>2672</LocaleCode><Term>Diakoner</Term><Description>Leder det diakonala arbetet. Håller stödjande samtal med ungdomar och äldre. Gör hembesök hos äldre och sjuka. Leder och organiserar de som arbetar frivilligt inom kyrka och församling. Bygger nätverk med andra institutioner som polis och socialtjänst. Assisterar prästen i gudstjänst vid nattvard eller förbön.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>267</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1373</LocaleGroupID><LocaleCode>3111</LocaleCode><Term>Ingenjörer o tekniker, industri o prod.planering</Term><Description>Utför operativt produktions-, informations- och materialplanering baserat på skattade volymer, faktiskt åtgång och lagerhållning. Granskar konstruktioner i samråd med konstruktör utifrån funktionella och bearbetningstekniska krav. Tidsätter operationer, kalkylerar arbets-, lager-, transport-, tjänste- och produktionskostnader.

Hit hör inte
Civilingenjörsyrken inom logistik och produktionsplanering (2141)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1344</LocaleGroupID><LocaleCode>3112</LocaleCode><Term>Ingenjörer och tekniker inom bygg och anläggning</Term><Description>Utför tekniskt arbete i samband med konstruktion, nybyggnation, underhåll och reparation av byggnader och anläggningar. Utför mätnings-, konstruktions- och beräkningsarbete samt upprättar arbets- och detaljritningar. Deltar i kontroll och slutgranskning av bygg- och anläggningsprojekt. Utvecklar drift- och underhållsverksamheten för att optimera fastigheters tekniska system. 

Hit hör inte
Civilingenjörsyrken inom bygg och anläggning (2142)	
</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1372</LocaleGroupID><LocaleCode>3113</LocaleCode><Term>Ingenjörer och tekniker inom elektroteknik</Term><Description>Utför tekniskt arbete i samband med konstruktion, tillverkning, montering, drift, underhåll och reparation av elektroteknisk utrustning och system. Utför konstruktions-, ritnings- och beräkningsarbete. Organiserar, leder och samordnar det praktiska arbetet vid tillverkning av elektrotekniska produkter. Provar och kontrollerar elektrotekniska produkter och anläggningar.

Hit hör inte
Civilingenjörsyrken inom elektroteknik (2143)</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1355</LocaleGroupID><LocaleCode>3114</LocaleCode><Term>Ingenjörer och tekniker inom maskinteknik</Term><Description>Utför tekniskt arbete i samband med konstruktion, tillverkning, montering, underhåll och reparation av fordon, maskiner och annan mekanisk utrustning samt värme-, vatten-, sanitets-, ventilations- och kylsystem. Utför konstruktions-, ritnings- och beräkningsarbete. Organiserar, leder och samordnar det praktiska arbetet vid tillverkning av fordon, maskiner m.m. Provar och kontrollerar maskiner och andra mekaniska produkter.

Hit hör inte
Civilingenjörsyrken inom maskinteknik (2144)	</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1371</LocaleGroupID><LocaleCode>3115</LocaleCode><Term>Ingenjörer och tekniker inom kemi och kemiteknik</Term><Description>Utför tekniskt arbete i samband med kemiteknisk produktion. Organiserar, leder och samordnar det praktiska arbetet vid tillverkning av petroleumprodukter, kemikalier, kemiska och kemitekniska produkter, läkemedel, syntetiska material eller livsmedel. Utför kvalitets- och produktionskontroller av kemiska och kemitekniska produkter under produktionsprocessen.
 
Hit hör inte
Civilingenjörsyrken inom kemi och kemiteknik (2145)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1370</LocaleGroupID><LocaleCode>3116</LocaleCode><Term>Ingenjörer o tekniker i gruvteknik o metallurgi</Term><Description>Utför tekniskt arbete vid utvinning av metaller, olja och gas eller vid framställning av metaller, legeringar och metallurgiska produkter samt vid underhåll och reparation av gruvinstallationer. Utför kvalitets- och produktkontroller i samband med stål- och metallframställning m.m.

Hit hör inte
Civilingenjörsyrken inom gruvteknik och metallurgi (2146)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1369</LocaleGroupID><LocaleCode>3117</LocaleCode><Term>GIS- och kartingenjörer</Term><Description>Utför karttekniskt arbete. Utför utredningar och beräkningar samt sammanställer och analyserar mätdata. Framställer kartor av olika slag.
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1368</LocaleGroupID><LocaleCode>3119</LocaleCode><Term>Övriga ingenjörer och tekniker</Term><Description>Utför annat tekniskt arbete än inom 3111-3117. Exempel på arbetsuppgifter: Samordnar tillverkning av metall-, glas-, keramik-, pappers-, läder-, textil- och träprodukter. Utför konstruktions-, ritnings- och beräkningsarbete. Gör kvalitets- och produktkontroller.
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>311</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1354</LocaleGroupID><LocaleCode>3121</LocaleCode><Term>Arbetsledare inom bygg, anläggning och gruva</Term><Description>Leder och fördelar arbete på arbetsplats. Bevakar att maskiner och material finns på plats och samordnar arbete med underentreprenörer. Har ansvar för att arbetet utförs enligt gällande ritningar och anvisningar och för att säkerhetsföreskrifter följs. Har visst personalansvar.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>312</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1367</LocaleGroupID><LocaleCode>3122</LocaleCode><Term>Arbetsledare inom tillverkning</Term><Description>Samordnar, leder och följer upp arbete vid tillverkningsprocesser.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>312</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1366</LocaleGroupID><LocaleCode>3151</LocaleCode><Term>Maskinbefäl</Term><Description>Ansvarar för drift och underhåll av maskinell, elektrisk och elektronisk utrustning ombord på fartyg.
 
Hit hör inte
Motorman (7233)
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>315</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1299</LocaleGroupID><LocaleCode>3152</LocaleCode><Term>Fartygsbefäl m.fl.</Term><Description>Navigerar och styr fartyg. Leder arbete på däck och kommandobrygga samt ansvarar för att säkerhetsföreskrifter följs ombord. 

Hit hör inte 
Fiskeskeppare (6222)
Matros (8350)</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>315</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1322</LocaleGroupID><LocaleCode>3153</LocaleCode><Term>Piloter m.fl.</Term><Description>Navigerar och styr flygplan, helikoptrar och andra luftfartyg. Ansvarar för flygning, passagerare och last. Övervakar styr- och navigeringssystem.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>315</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1365</LocaleGroupID><LocaleCode>3154</LocaleCode><Term>Flygledare</Term><Description>Övervakar och leder flygtrafik på start- och landningsbanor samt i luften. Ger instruktioner om startpunkt, färdväg, flyghöjd m.m.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>315</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1364</LocaleGroupID><LocaleCode>3155</LocaleCode><Term>Flygtekniker</Term><Description>Ansvarar för och leder service- och underhållsarbete på flygplan och helikoptrar. Gör felsökning, inspektioner och funktionskontroller.</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>315</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1360</LocaleGroupID><LocaleCode>3211</LocaleCode><Term>Tekniker, bilddiagnostik o medicintekn. utrustn.</Term><Description>Installerar, kontrollerar, övervakar och utför service på medicinteknisk utrustning som används vid diagnosticering eller behandling av olika sjukdomar. Sköter och övervakar t.ex. hjärtlungmaskiner.</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>321</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1361</LocaleGroupID><LocaleCode>3212</LocaleCode><Term>Biomedicinska analytiker m.fl.</Term><Description>Utför kliniska analyser vid sjukhus, läkemedelsindustrin eller laboratorium. Gör kemiska och biokemiska analyser samt tar prover. Hanterar teknisk apparatur och annan utrustning för provtagning och analys. Tar fram underlag som läkare behöver för att fastställa rätt diagnos. Deltar i forskning och utvecklingsarbete. Genomför analyser och dokumenterar bevis vid brottsutredningar.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>321</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1362</LocaleGroupID><LocaleCode>3213</LocaleCode><Term>Receptarier</Term><Description>Bereder, expedierar, marknadsför och kvalitetskontrollerar läkemedel inom exempelvis apotek, läkemedelsindustri och sjukhus. Ger råd om läkemedel och hälsa.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>321</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1363</LocaleGroupID><LocaleCode>3214</LocaleCode><Term>Tandtekniker och ortopedingenjörer m.fl.</Term><Description>Tillverkar tandställning, tandprotes och annan tandersättning. Analyserar behov och önskemål samt utformar och tillverkar ortoped- och hörseltekniska hjälpmedel m.m.</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>321</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1359</LocaleGroupID><LocaleCode>3215</LocaleCode><Term>Laboratorieingenjörer</Term><Description>Utför experiment, analys- och kontrollarbete vid kemiskt och fysikaliskt industri- eller forskningslaboratorium. Kontrollerar, testar och analyserar råvaror och produkter. Assisterar vid utformning och utförande av experiment. 

Hit hör inte
Biomedicinsk analytiker (3212)
Civilingenjörsyrken inom kemi (2145)
Ingenjörsyrken inom kemi (3115)
Kemitekniker (3115)
Laboratoriebiträde (5349)
</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>321</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1279</LocaleGroupID><LocaleCode>3230</LocaleCode><Term>Terapeuter inom alternativmedicin</Term><Description>Behandlar obalanser, spänningar och blockeringar i kroppen.

Hit hör inte
Massör/ Massageterapeut (5143)
Fotterapeut/Fotvårdsspecialist (5144)
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>323</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1358</LocaleGroupID><LocaleCode>3240</LocaleCode><Term>Djursjukskötare m.fl.</Term><Description>Vårdar och sköter sjuka djur på djursjukhus, djurklinik m.m. Assisterar veterinär vid undersökningar och operationer. Tar prover och röntgenbilder. Informerar och ger råd samt utför enklare behandlingar.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>324</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1251</LocaleGroupID><LocaleCode>3250</LocaleCode><Term>Tandhygienister</Term><Description>Behandlar patienter och ger information om förebyggande åtgärder om tandhälsa. Undersöker munhåla samt tar saliv- och bakterieprov. Gör tester, kostutredningar, tar röntgenbilder och utför tandlossningsbehandlingar. Assisterar vid tandreglering. Ger smärtlindring, tar bort tandsten och andra beläggningar på tänderna.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>325</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1357</LocaleGroupID><LocaleCode>3311</LocaleCode><Term>Mäklare inom finans</Term><Description>Köper och säljer för kunders räkning valuta, aktier, optioner, obligationer, stadsskuldväxlar och andra värdepapper.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>331</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1356</LocaleGroupID><LocaleCode>3312</LocaleCode><Term>Banktjänstemän</Term><Description>Leder, planerar och samordnar verksamhet vid bankkontor eller bankavdelning. Gör kredit- och riskbedömningar vid exempelvis långivning. Svarar för ekonomisk rådgivning till företag och privatpersoner. Upprättar deklarationer, testamenten och andra ekonomiska handlingar.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>331</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1353</LocaleGroupID><LocaleCode>3313</LocaleCode><Term>Redovisningsekonomer</Term><Description>Sammanställer, rapporterar, utvärderar och redovisar företags eller myndigheters ekonomiska resultat. Sammanställer budgetunderlag. Bistår revisor med att granska företags och myndigheters redovisning och förvaltning.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>331</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1352</LocaleGroupID><LocaleCode>3314</LocaleCode><Term>Skadereglerare och värderare</Term><Description>Leder, planerar och samordnar behandling av försäkringsärenden. Besiktigar och värderar försäkringsskador samt utreder skadeersättning. Uppskattar förluster som täcks av försäkringsavtal. Värderar egendom och tillhörigheter i samband med försäljning, försäkringsärende m.m.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>331</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1351</LocaleGroupID><LocaleCode>3321</LocaleCode><Term>Försäkringssäljare och försäkringsrådgivare</Term><Description>Marknadsför och säljer försäkringar samt analyserar och ger råd om försäkringsbehov. Utreder risker för att kunna kontrollera och fastställa premier och försäkringsvillkor. Köper och säljer delar av försäkringar till andra försäkringsbolag.
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>332</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1350</LocaleGroupID><LocaleCode>3322</LocaleCode><Term>Företagssäljare</Term><Description>Säljer produkter och tjänster till exempelvis återförsäljare, grossister och företag genom uppsökande verksamhet eller från kontor. Ansvarar för produkt eller distrikt. Informerar om produkter och tjänster, utarbetar kundspecifika lösningar samt tar emot beställningar. Sköter kundregister och tar fram försäljningsstatistik.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>332</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1349</LocaleGroupID><LocaleCode>3323</LocaleCode><Term>Inköpare och upphandlare</Term><Description>Köper in varor och tjänster. Planerar och utreder inköpsbehov och tar in anbud och offerter. Upprätthåller och söker nya kontakter med leverantör. Gör sammanställningar och kalkyler, förhandlar om pris och leveransvillkor samt fattar beslut och skriver kontrakt och sluter avtal.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>332</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1329</LocaleGroupID><LocaleCode>3324</LocaleCode><Term>Ordersamordnare m.fl.</Term><Description>Samordnar och bevakar order och leveranser genom kontakter med leverantörer, kunder, interna avdelningar, transportföretag, speditörer m.fl.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>332</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1328</LocaleGroupID><LocaleCode>3331</LocaleCode><Term>Speditörer och transportmäklare</Term><Description>Organiserar för kunders räkning godstransporter och förhandlar om fraktavtal. Upprättar handlingar samt tecknar försäkringar. Beräknar utförselavgifter, tull- och införselavgifter, skatter m.m. Förmedlar lastutrymme i fartyg och andra transportmedel. Utreder reklamations- och skadeärenden. 

Hit hör inte
Logistiker (2141)
Speditionsassistent (4323)
Transportledare (4323)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>333</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1327</LocaleGroupID><LocaleCode>3332</LocaleCode><Term>Evenemangs- och reseproducenter m.fl.</Term><Description>Producerar och organiserar turist-, affärs-, grupp- och konferensresor. Arrangerar och samordnar konferenser, evenemang, tillställningar, fester och seminarier. Undersöker resmål. Förhandlar om pris och andra villkor samt skriver avtal. Sammanställer resekataloger, tidtabeller och broschyrer. 

Hit hör inte
Resebyråchef (1790)
Resesäljare/Reseförsäljare/Resekonsulent (4221)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>333</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1326</LocaleGroupID><LocaleCode>3333</LocaleCode><Term>Arbetsförmedlare</Term><Description>Matchar lediga platser mot arbetssökande. Fångar upp arbetsmarknadens rekryteringsbehov. Ger råd och stöd till arbetsgivare hur de rekryterar personal och till arbetssökande hur de får arbete.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>333</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1122</LocaleGroupID><LocaleCode>3334</LocaleCode><Term>Fastighetsmäklare</Term><Description>Förmedlar köp, försäljning eller uthyrning av hus, bostadsrätter, industribyggnader m.m. Marknadsför och visar objekt.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>333</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1123</LocaleGroupID><LocaleCode>3335</LocaleCode><Term>Fastighetsförvaltare</Term><Description>Förvaltar fastigheter, svarar för uthyrning och besiktning samt skriver underhållsplaner. Förhandlar om hyror samt ansvarar för ekonomiska kalkyler och upprättar kontrakt. Tar in och granskar offerter.

Hit hör inte
Fastighetsingenjör (3112)</Description><LocaleFieldID>18</LocaleFieldID><LocaleLevel3Code>333</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1325</LocaleGroupID><LocaleCode>3339</LocaleCode><Term>Övriga förmedlare</Term><Description>Utför annat förmedlingsarbete än inom 3331 – 3335. Exempel på arbetsuppgifter: Säljer varor eller fast egendom på auktion. Bokar engagemang och förhandlar kontrakt m.m. för artister, musiker, författare, idrottsutövare m.fl. Säljer annonser i media. Ger råd om butiksekonomi och marknadsföring.
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>333</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1324</LocaleGroupID><LocaleCode>3341</LocaleCode><Term>Gruppledare för kontorspersonal</Term><Description>Samordnar, leder, planerar och fördelar arbetet inom kontor och kundservice. Utbildar och instruerar personal.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>334</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1300</LocaleGroupID><LocaleCode>3342</LocaleCode><Term>Domstols- och juristsekreterare m.fl.</Term><Description>Utför assisterande juridiskt arbete. Förbereder, granskar och bearbetar juridiska handlingar. Kallar parter till förhandlingar. Skickar förelägganden. Protokollför rättegångar och förhandlingar. Upprättar förteckningar över dödsbons tillgångar och skulder samt bistår vid arvskifte.
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>334</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1342</LocaleGroupID><LocaleCode>3343</LocaleCode><Term>Chefssekreterare och VD-assistenter m.fl.</Term><Description>Bevakar, förbereder, samordnar och följer upp ärenden och beslut som stöd till chefer, ledningsgrupp och koncernledning m.fl.. Förbereder rapporter. Medverkar vid utredningsarbete. Förbereder och arrangerar styrelsemöten, konferenser och liknande. Upprättar protokoll, gör sammanfattningar och översättningar.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>334</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1348</LocaleGroupID><LocaleCode>3351</LocaleCode><Term>Tull- och kustbevakningstjänstemän</Term><Description>Övervakar person- och godstrafik vid rikets gränser och kontrollerar att tullbestämmelser efterlevs. Bevakar att tull, mervärdesskatt och andra avgifter betalas vid import. Övervakar sjötrafik samt säkerheten och miljöskyddet till sjöss. Kontrollerar att fiskeregler följs.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>335</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1347</LocaleGroupID><LocaleCode>3352</LocaleCode><Term>Skattehandläggare</Term><Description>Granskar deklarationer, köpebrev och andra dokument för att bestämma skatter m.m. Kontrollerar inbetalningar av bl.a. mervärdesskatt och arbetsgivaravgifter.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>335</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1346</LocaleGroupID><LocaleCode>3353</LocaleCode><Term>Socialförsäkringshandläggare</Term><Description>Handlägger, utreder och informerar samt fattar beslut om olika socialförsäkringar.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>335</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1345</LocaleGroupID><LocaleCode>3354</LocaleCode><Term>Säkerhetsinspektörer m.fl.</Term><Description>Kontrollerar att produkter och verksamhet uppfyller kvalitets- och säkerhetskrav. Analyserar risker i produktion. Besiktigar fordon, fartyg och luftfartyg. Svarar för tillsyn av trafik- och flygskolor. Utfärdar föreskrifter och certifikat. Verkar för att farligt gods transporteras på ett säkert sätt.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>335</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1343</LocaleGroupID><LocaleCode>3355</LocaleCode><Term>Brandingenjörer och byggnadsinspektörer m.fl.</Term><Description>Inspekterar och besiktigar byggnader, anläggningar m.m. Inspekterar brandskyddssystem. Informerar och ger råd vid ny- och ombyggnationer. Gör olycksutredningar och arbetar i operativ räddningstjänst i samband med räddningsinsatser.

Hit hör inte
Brandbefäl/Räddningsledare/Insatsledare (5411)
</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>335</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1341</LocaleGroupID><LocaleCode>3359</LocaleCode><Term>Övriga handläggare</Term><Description>Utför annat handläggningsarbete än inom 3351-3355. Exempel på arbetsuppgifter: Utfärdar föreskrifter, certifikat och tillstånd. Handlägger och förbereder ärenden, utreder och fattar beslut.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>335</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1340</LocaleGroupID><LocaleCode>3360</LocaleCode><Term>Poliser</Term><Description>Upprätthåller ordningen på allmän plats. Ingriper vid lagöverträdelser samt utreder brott. Etablerar kontakter och inhämtar information från olika källor för att förebygga brott. Övervakar och dirigerar trafik.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>336</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1339</LocaleGroupID><LocaleCode>3411</LocaleCode><Term>Behandlingsassistenter och socialpedagoger m.fl.</Term><Description>Behandlar och rehabiliterar klienter och patienter inom psykiatrisk vård, missbruksvård och kriminalvård. Arbetar med insatser till stöd för flyktingar. Ger pedagogiskt stöd och service exempelvis till äldre personer och till personer med funktionsnedsättningar.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>341</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1338</LocaleGroupID><LocaleCode>3412</LocaleCode><Term>Pastorer m.fl.</Term><Description>Leder och planerar arbetet i frikyrkoförsamling. Leder gudstjänst och håller möten. Förrättar dop, vigslar och begravningar. Uttolkar bibliska skrifter och undervisar i trosfrågor. Utövar själavård.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>341</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1337</LocaleGroupID><LocaleCode>3421</LocaleCode><Term>Professionella idrottsutövare</Term><Description>Tränar och tävlar inom olika idrottsgrenar och idrottsevenemang, som medlemmar i lag eller individuellt.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>342</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1336</LocaleGroupID><LocaleCode>3422</LocaleCode><Term>Idrottstränare och instruktörer m.fl.</Term><Description>Tränar och instruerar professionella idrottsutövare, amatörer och motionärer. Arrangerar, leder eller övervakar tävlingar och olika idrottsevenemang. Sätter poäng, kontrollerar utrustning och tävlingsplatser m.m.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>342</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1335</LocaleGroupID><LocaleCode>3423</LocaleCode><Term>Fritidsledare m.fl.</Term><Description>Planerar, organiserar och leder fritidsverksamhet för barn, ungdomar och äldre på fritidsgårdar, föreningar, organisationer, företag, inom äldreomsorg eller församlingar.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>342</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1334</LocaleGroupID><LocaleCode>3424</LocaleCode><Term>Friskvårdskonsulenter och hälsopedagoger m.fl.</Term><Description>Planerar, leder och organiserar friskvårdsinsatser. Utreder behovet av friskvård samt utformar policy och planer för hälsofrämjande insatser i företag och organisationer.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>342</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1333</LocaleGroupID><LocaleCode>3431</LocaleCode><Term>Fotografer</Term><Description>Tar stillbilder och rörliga bilder för kommersiella, konstnärliga, industriella och vetenskapliga ändamål. Bearbetar bildkomposition. Sammanställer och redigerar inspelat material till färdigt program eller film.
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>343</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1332</LocaleGroupID><LocaleCode>3432</LocaleCode><Term>Inredare, dekoratörer och scenografer m.fl.</Term><Description>Inreder, väljer möbler och dekorerar t.ex. affärer, kaféer, restauranger, kontor och hem. Ställer i ordning scendekorer, skyltfönster m.m.

Hit hör inte
Inredningsarkitekt (2161)
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>343</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1331</LocaleGroupID><LocaleCode>3433</LocaleCode><Term>Inspicienter och scriptor m.fl.</Term><Description>Ansvarar för de praktiska detaljerna i arbetet med att sätta upp en teaterföreställning eller vid inspelning. Ser till att personer och föremål finns på rätt plats vid rätt tidpunkt. Läser manus, antecknar önskemål om ljus, effekter, musik m.m. Handlägger licens- och royaltyfrågor.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>343</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1330</LocaleGroupID><LocaleCode>3439</LocaleCode><Term>Övriga yrken inom kultur och underhållning</Term><Description>Utför övrigt arbete inom kultur och underhållning än inom 3431-3433. Exempel på arbetsuppgifter: Framför cirkuskonster och illusionsnummer. Jonglerar, imiterar m.m. Agerar i farliga sekvenser på film. Presenterar program i radio och TV.
</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>343</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1323</LocaleGroupID><LocaleCode>3441</LocaleCode><Term>Trafiklärare</Term><Description>Genomför teoretisk och praktisk körkortsutbildning för motorfordon. Lär ut trafikregler, körteknik och trafiksäkerhet.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>344</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1320</LocaleGroupID><LocaleCode>3449</LocaleCode><Term>Övriga utbildare och instruktörer</Term><Description>Leder studiecirklar och kurser utanför det reguljära utbildningsväsendet. Exempel på arbetsuppgifter: Lär ut språk, datakunskap, dans, musik, slöjd och hantverkstekniker. Undervisar på utbildningsföretag i datakunskap, ledarskap m.m. Organiserar bl.a. fortbildning av anställda inom företag.</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>344</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1319</LocaleGroupID><LocaleCode>3451</LocaleCode><Term>Köksmästare och souschefer</Term><Description>Ansvarar för och leder dagligt arbete i kök i en restaurang eller på ett fartyg. Skapar rätter samt planerar matsedel och menyer.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>345</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1318</LocaleGroupID><LocaleCode>3452</LocaleCode><Term>Storhushållsföreståndare</Term><Description>Ansvarar för och leder dagligt arbete i köket på ett internat eller inom storhushåll, exempelvis på en sjukhusrestaurang eller i en skolmatsal. Planerar matsedlar samt köper in varor.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>345</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1317</LocaleGroupID><LocaleCode>3511</LocaleCode><Term>Drifttekniker, IT</Term><Description>Sköter daglig drift av informations- och kommunikationssystem, kringutrustning, maskinvara, programvara och annan datorutrustning för att identifiera och förebygga fel och driftstörningar.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>351</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1316</LocaleGroupID><LocaleCode>3512</LocaleCode><Term>Supporttekniker, IT</Term><Description>Ger teknisk support. Genomför felsökningar, analyserar och åtgärdar uppkomna fel. Ger service och support i samband med installation och underhåll av system. Löser problem som uppstår t.ex. med användares lösenord.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>351</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1315</LocaleGroupID><LocaleCode>3513</LocaleCode><Term>Systemadministratörer</Term><Description>Administrerar system, databaser och lokala nätverk och ger service till användare. Installerar och konfigurerar nya applikationer och distribuerar programuppdateringar till användare.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>351</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1314</LocaleGroupID><LocaleCode>3514</LocaleCode><Term>Nätverks- och systemtekniker m.fl.</Term><Description>Installerar och konfigurerar kommunikationsutrustning samt ansvarar för underhåll av denna utrustning, t. ex. brandväggar, routrar, switchar etc.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>351</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1313</LocaleGroupID><LocaleCode>3515</LocaleCode><Term>Webbmaster och webbadministratörer</Term><Description>Underhåller, övervakar och administrerar drift av Internet och interna webbplatser samt maskin- och programvara för webbservrar. Ansvarar för en webbplats övergripande struktur och innehåll.</Description><LocaleFieldID>3</LocaleFieldID><LocaleLevel3Code>351</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1312</LocaleGroupID><LocaleCode>3521</LocaleCode><Term>Bild- och sändningstekniker</Term><Description>Ansvarar för teknik och leder arbete vid sändning av TV-program från studio eller inspelningsbuss. Planerar och hanterar utrustning för redigering och mixning av ljud- och bildinspelningar. Gör mixbearbetning av inspelningar samt överför ljud till och från olika media.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>352</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1311</LocaleGroupID><LocaleCode>3522</LocaleCode><Term>Ljus-, ljud- och scentekniker</Term><Description>Installerar och programmerar utrustning för ljus, ljud och scenmaskineri. Svarar för och sköter ljussättning. Ansvarar för sceners byggnad, funktion och tekniska utrustning samt underhåll. Planerar och genomför föreställningar med artister inom scenkonsten. Bygger, skiftar och river dekor.</Description><LocaleFieldID>11</LocaleFieldID><LocaleLevel3Code>352</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1310</LocaleGroupID><LocaleCode>4111</LocaleCode><Term>Ekonomiassistenter m.fl.</Term><Description>Registrerar, sammanställer och bearbetar data om företags eller organisations ekonomiska transaktioner. Kontrollerar och upprättar underlag för exempelvis fakturor. Sköter och bokför in- och utbetalningar. Informerar om resultat. Sköter momshantering och sammanställer material inför skattedeklarationen.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1309</LocaleGroupID><LocaleCode>4112</LocaleCode><Term>Löne- och personaladministratörer</Term><Description>Utför löneberedningsrutiner och löpande lönearbete. Hanterar anställningsformer och tillämpning av arbetsrätt och avtal i löneberedning, löneformer och lönedelar. Sammanställer underlag för statistik, pensions- och försäkringsärenden.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1308</LocaleGroupID><LocaleCode>4113</LocaleCode><Term>Backofficepersonal m.fl.</Term><Description>Utför registrering, avveckling och kontroll av affärshändelser inom värdepappers- och valutahandeln.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1307</LocaleGroupID><LocaleCode>4114</LocaleCode><Term>Marknads- och försäljningsassistenter</Term><Description>Bevakar och bereder marknads- och försäljningsärenden. Sköter administration för marknads- och försäljningsaktiviteter. Kontrollerar och redigerar texter. Bokar utrymme för annonser och kampanjer samt kontrollerar införande med avseende på tidpunkt, innehåll, plats, storlek och form. Sköter samordning mellan reklambyrå, tryckeri och medieföretag.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1306</LocaleGroupID><LocaleCode>4115</LocaleCode><Term>Inköps- och orderassistenter</Term><Description>Gör beställningar samt kontrollerar varor och fakturor. Granskar offerter och skriver ut inköpsorder. Sköter leverantörsregister och lagerlistor. Begär in offerter, pris och leverantörsuppgifter.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1305</LocaleGroupID><LocaleCode>4116</LocaleCode><Term>Skolassistenter m.fl.</Term><Description>Hanterar personal- och elevregister, diarieföring, arkivering, statistik, posthantering och frånvarohantering vid förskolor eller skolor. Beställer läromedel och förbrukningsmaterial. Assisterar förskolechef eller rektor.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1304</LocaleGroupID><LocaleCode>4117</LocaleCode><Term>Medicinska sekreterare, vårdadministratörer m fl</Term><Description>Skriver och hanterar patientjournaler utifrån information från läkare eller annan vårdgivare. Sköter administration, remisshantering och tar emot patienter.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1303</LocaleGroupID><LocaleCode>4119</LocaleCode><Term>Övriga kontorsassistenter och sekreterare</Term><Description>Utför annat kontorsarbete än inom 4111-4117 Exempel på arbetsuppgifter: Sköter löpande ärenden inom administration. Kontrollerar, kompletterar, registrerar, besvarar förfrågningar m.m. Skriver protokoll, brev, tabeller och andra dokument. Gör uträkningar och avstämningar.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>411</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1302</LocaleGroupID><LocaleCode>4211</LocaleCode><Term>Croupierer och oddssättare m.fl.</Term><Description>Leder olika kasinospel. Säljer spelbrickor och ropar ut nummer under bingospelets gång. Beräknar matematiska sannolikheter och tar fram statistik för oddssättning.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>421</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1301</LocaleGroupID><LocaleCode>4212</LocaleCode><Term>Inkasserare och pantlånare m.fl.</Term><Description>Överlämnar delgivningshandlingar. Inkasserar utestående fordringar samt undersöker tillgångar. Gör upp avbetalningsplaner och medverkar i förlikningar. Upprättar ansökningshandlingar till Kronofogden samt ansöker om verkställighet såsom utmätningar och avhysningar. Lånar ut pengar mot pant. Värderar panter eller annan säkerhet. Informerar om lånevillkor och beräknar ränta.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>421</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1298</LocaleGroupID><LocaleCode>4221</LocaleCode><Term>Resesäljare och trafikassistenter m.fl.</Term><Description>Lämnar upplysningar om resor, resmål, logi och evenemang. Förmedlar och säljer resor. Gör upp resplaner och bokar biljetter, hotellrum m.m. Svarar för passagerarservice på flygplatser samt på färje- och bussterminaler. Informerar om avgångstider, biljettpriser, linjesträckningar, restider m.m. Kontrollerar färdbevis och registrerar bagage.

Hit hör inte
Flygplatskontrollant (5413)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>422</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1297</LocaleGroupID><LocaleCode>4222</LocaleCode><Term>Kundtjänstpersonal</Term><Description>Ger råd och upplysningar samt besvarar frågor om ett företags eller organisations produkter, tjänster eller policy.
 
Hit hör inte
Telefonist (4223)
Helpdesktekniker, IT/Supporttekniker, IT (3512)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>422</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1294</LocaleGroupID><LocaleCode>4223</LocaleCode><Term>Telefonister</Term><Description>Tar emot och kopplar telefonsamtal. Ger upplysningar, tar emot meddelanden och lämnar besked. Sköter växel samt hänvisnings- och personsökningssystem.
</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>422</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1293</LocaleGroupID><LocaleCode>4224</LocaleCode><Term>Hotellreceptionister m.fl.</Term><Description>Tar emot, checkar in och checkar ut gäster på hotell, konferensanläggning, vandrarhem eller campingplats m.m. Informerar om bl.a. anläggningens service samt sevärdheter och nöjesevenemang. Gör i ordning konferenslokaler och ansvarar för att den tekniska utrustningen fungerar och att förtäring serveras enligt beställningen.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>422</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1292</LocaleGroupID><LocaleCode>4225</LocaleCode><Term>Kontorsreceptionister</Term><Description>Tar emot besökande. Informerar och hänvisar till plats, lokal eller person. Hanterar in- och utpassering.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>422</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1291</LocaleGroupID><LocaleCode>4226</LocaleCode><Term>Marknadsundersökare och intervjuare</Term><Description>Intervjuar personer och hanterar svaren för marknads-, samhälls- och opinionsundersökningar. 
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>422</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1290</LocaleGroupID><LocaleCode>4321</LocaleCode><Term>Arbetsledare inom lager och terminal</Term><Description>Ansvarar, samordnar och leder daglig drift på lager eller terminal.
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>432</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1289</LocaleGroupID><LocaleCode>4322</LocaleCode><Term>Lager- och terminalpersonal</Term><Description>Registrerar, kontrollerar och styr material- och varuflöden. Planerar och kontrollerar leveranser samt planerar lagerhållning och utnyttjande av lagerkapacitet. Tar emot gods samt plockar, packar och lastar gods med hjälp av exempelvis truck. Kontrollerar och registrerar varor.

Hit hör inte
Hamnarbetare/Stuveriarbetare (9331)
Lastare (9332) 
Logistiker (2141)
Packare (9320)
Reservdelsspecialist/Bildelsspecialist (7231)
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>432</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1288</LocaleGroupID><LocaleCode>4323</LocaleCode><Term>Transportledare och transportsamordnare</Term><Description>Samordnar och övervakar person- och godstrafik vid t.ex. lokaltrafikföretag, åkerier, godsterminal, grosshandel och industriföretag. Utarbetar och justerar transportscheman. Ansvarar för tågtrafik inom ett geografiskt område samt dirigerar tågtrafik enligt säkerhetsbestämmelser och tidtabell. Lägger växlar och ställer signaler med hjälp av ställverk. Övervakar trafik på flygplatser samt registrerar starter och landningar. Beräknar ankomsttider och svarar för behandling av gods vid flygterminal. Anvisar kajplats åt fartyg och tillhandahåller utrustning.
 
Hit hör inte
Logistiker (2141)
Speditör (3331)
Trafikinformatör (4222)
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>432</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1287</LocaleGroupID><LocaleCode>4410</LocaleCode><Term>Arkiv- och biblioteksassistenter m.fl.</Term><Description>Förtecknar, sorterar och tar fram arkivhandlingar. Biträder vid katalogisering och registrering av böcker och annat publicerat material. Ordnar och lånar ut böcker, tidskrifter m.m. Biträder vid informationssökning. Sköter bild- och ljudanläggningar. Biträder vid registrering, skötsel och utställning av museiföremål.</Description><LocaleFieldID>1</LocaleFieldID><LocaleLevel3Code>441</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1286</LocaleGroupID><LocaleCode>4420</LocaleCode><Term>Brevbärare och postterminalarbetare</Term><Description>Förbereder distribution samt distribuerar post t.ex. brev, tidskrifter och direktreklam. Maskinsorterar post.
 
Hit hör inte
Reklamdistributör/Reklamutdelare (9621)
Tidningsbud (9621)
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>442</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1285</LocaleGroupID><LocaleCode>5111</LocaleCode><Term>Kabinpersonal m.fl.</Term><Description>Svarar för passagerares säkerhet ombord på flygplanet. Informerar om säkerhetsföreskrifter m.m. Serverar måltider och drycker samt säljer olika varor. Planerar och samordnar service och aktiviteter på fartyg.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>511</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1284</LocaleGroupID><LocaleCode>5112</LocaleCode><Term>Tågvärdar och ombordansvariga m.fl.</Term><Description>Kontrollerar och säljer färdbevis. Ansvarar för passagerarnas säkerhet och bekvämlighet på tåg och spårvagnar. Serverar måltider och drycker samt säljer olika varor. Informerar om avgångstider, biljettpriser, linjesträckningar, restider m.m.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>511</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1283</LocaleGroupID><LocaleCode>5113</LocaleCode><Term>Guider och reseledare</Term><Description>Leder utflykter, sightseeingturer och andra arrangemang, både för enskilda besökare och turister eller i grupp. Informerar om sevärdheter m.m. Representerar reseföretag på plats.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>511</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1282</LocaleGroupID><LocaleCode>5120</LocaleCode><Term>Kockar och kallskänkor</Term><Description>Lagar, lägger upp och garnerar mat inom hotell- och restaurangnäringen, inom storkök, provkök, på ett fartyg eller i en butik.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>512</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1281</LocaleGroupID><LocaleCode>5131</LocaleCode><Term>Hovmästare och servitörer</Term><Description>Organiserar och leder serveringspersonals arbete. Tar emot bordsreservationer samt beställningar på mat och dryck på restauranger eller hotell. Ansvarar för drycker på en restaurang. Serverar gäster mat och dryck på restauranger, konferensanläggningar, passagerarfartyg m.m.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>513</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1280</LocaleGroupID><LocaleCode>5132</LocaleCode><Term>Bartendrar</Term><Description>Serverar drycker på restauranger, hotell, nattklubbar, diskotek eller pubar. Lämnar ut drycker till serveringspersonal efter gästers beställningar. Tillreder och serverar kaffebaserade drycker på kaféer och konditorier.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>513</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1274</LocaleGroupID><LocaleCode>5141</LocaleCode><Term>Frisörer</Term><Description>Klipper, behandlar och vårdar hår med hjälp av t. ex. sax, klippmaskin och kniv. Utför kemiska behandlingar som permanent, färgning och blekning. Gör håruppsättningar, läggningar och hårförlängningar. Tillverkar och provar ut peruker och tupéer. </Description><LocaleFieldID>4</LocaleFieldID><LocaleLevel3Code>514</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1275</LocaleGroupID><LocaleCode>5142</LocaleCode><Term>Hudterapeuter</Term><Description>Utför ansikts- och kroppsbehandlingar. Gör hudanalyser, djuprengör huden, ger massage och lägger masker och krämer. Ger råd och föreslår lämpliga behandlingar och produkter.
 
Hit hör inte
Manikyrist/Manikurist (5149)
Nagelterapeut/Nagelteknolog (5149)
Pedikyrist/Pedikurist (5149)
</Description><LocaleFieldID>4</LocaleFieldID><LocaleLevel3Code>514</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1276</LocaleGroupID><LocaleCode>5143</LocaleCode><Term>Massörer och massageterapeuter</Term><Description>Masserar kroppens mjukdelsvävnader för att motverka spänningar och andra lindriga besvär. Behandlar specifika besvär med hjälp av massageterapeutiska metoder. Ger även behandling i förebyggande syfte.
</Description><LocaleFieldID>4</LocaleFieldID><LocaleLevel3Code>514</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1277</LocaleGroupID><LocaleCode>5144</LocaleCode><Term>Fotterapeuter</Term><Description>Behandlar förhårdnader, nageltrång och andra besvär på fötter. Utför medicinsk fotvård. Ger råd om egenvård, skor och hjälpmedel.

Hit hör inte
Pedikyrist/Pedikurist (5149)
Podiatriker/Podiater (2289)
</Description><LocaleFieldID>4</LocaleFieldID><LocaleLevel3Code>514</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1278</LocaleGroupID><LocaleCode>5149</LocaleCode><Term>Övriga skönhets- och kroppsterapeuter</Term><Description>Utför annat skönhets- och kroppsterapeutiskt arbete än inom 5141-5144 Exempel på arbetsuppgifter: Ger vårdande behandlingar på händer, naglar och nagelband. Bygger upp, förstärker, förlänger och lagar naglar med olika metoder, material och hjälpmedel. Utför spa-behandlingar. Ger råd om kläder och smink. Lägger makeup. Maskerar skådespelare m.m.</Description><LocaleFieldID>4</LocaleFieldID><LocaleLevel3Code>514</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1273</LocaleGroupID><LocaleCode>5151</LocaleCode><Term>Städledare och husfruar</Term><Description>Leder, planerar och samordnar det dagliga städarbetet samt följer upp och utvecklar instruktioner och rutiner. Ansvarar för städmaterial, gästartiklar, linne och annat material.</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>515</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1272</LocaleGroupID><LocaleCode>5152</LocaleCode><Term>Fastighetsskötare</Term><Description>Övervakar, sköter och underhåller fastigheters inre och yttre miljö. Kontrollerar ventilations- och värmeanläggningar. Utför mindre reparationer och svarar för service till hyresgäster och besökare.</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>515</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1271</LocaleGroupID><LocaleCode>5161</LocaleCode><Term>Begravnings- och krematoriepersonal</Term><Description>Förbereder, arrangerar och utför uppgifter i samband med begravningsceremonier, jordfästningar, kremeringar och gravsättningar.</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>516</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1270</LocaleGroupID><LocaleCode>5169</LocaleCode><Term>Övrig servicepersonal</Term><Description>Utför andra servicetjänster. 

Hit hör inte
Hemservicepersonal (9119)</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>516</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1264</LocaleGroupID><LocaleCode>5221</LocaleCode><Term>Säljande butikschefer o avdelningschefer i butik</Term><Description>Ansvarar och planerar för drift och löpande verksamhet i butik. Leder, fördelar, kontrollerar och följer upp arbetet i butiken. Anställer och introducerar medarbetare. Deltar i den dagliga säljverksamheten. Driver kaféverksamhet.

Hit hör inte
Administrativ butikschef (1730)
Regionchef, butik (1730)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1265</LocaleGroupID><LocaleCode>5222</LocaleCode><Term>Butikssäljare, dagligvaror</Term><Description>Säljer livsmedel, drycker och andra dagligvaror i affärer, livsmedelshallar, stormarknader och andra försäljningsställen. Beställer, packar upp, prismärker samt fyller på varor.

Hit hör inte
Kassapersonal (5230)
Kioskbiträde (5230) 
Torgförsäljare/Marknadsförsäljare (9520)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1163</LocaleGroupID><LocaleCode>5223</LocaleCode><Term>Butikssäljare, fackhandel</Term><Description>Säljer sällanköpsvaror i affärer, varuhus och andra försäljningsställen. Informerar kunder om varor och priser samt ger råd om användning och skötsel. Beställer, packar upp, prismärker, fyller på och tar betalt för varor.

Hit hör inte
Reservdelsspecialist/Bildelsspecialist (7231)
Optikerassistent (5224)</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1266</LocaleGroupID><LocaleCode>5224</LocaleCode><Term>Optikerassistenter</Term><Description>Biträder optiker med kundkontakter och allmän rådgivning om glasögon och kontaktlinser. Genomför efter optikerns ordination teknisk anpassning av glasögon. Lämnar ut och justerar iordningställda glasögon och kontaktlinser samt ger instruktioner om hantering av linserna.
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1267</LocaleGroupID><LocaleCode>5225</LocaleCode><Term>Bensinstationspersonal</Term><Description>Säljer drivmedel, tillbehör, biltvätt och livsmedel. Bereder och serverar snabbmat och dryck. Hyr ut bilar, lastbilar och släpvagnar.

Hit hör inte
Biluthyrare (5226)
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1268</LocaleGroupID><LocaleCode>5226</LocaleCode><Term>Uthyrare</Term><Description>Hyr ut fordon, maskiner och andra varor och produkter.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1269</LocaleGroupID><LocaleCode>5227</LocaleCode><Term>Apotekstekniker</Term><Description>Ger råd om och säljer egenvårdsprodukter och receptfria läkemedel. Packar upp, prismärker samt fyller på varor i apotek.
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>522</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1263</LocaleGroupID><LocaleCode>5230</LocaleCode><Term>Kassapersonal m.fl.</Term><Description>Tar betalt för kunders inköp i affärer, stormarknader och andra försäljningsställen. Säljer biljetter till teatrar, bio, konserter, museer, utställningar m.m. Säljer och växlar valuta.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>523</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1261</LocaleGroupID><LocaleCode>5241</LocaleCode><Term>Eventsäljare och butiksdemonstratörer m.fl.</Term><Description>Marknadsför, säljer och informerar om tjänster och produkter på exempelvis mässor, köpcentra och butiker. Visar kläder för återförsäljare, press och allmänhet på modevisningar. Poserar för exempelvis reklambilder eller tidningsreportage. Poserar för målare, skulptörer och konstskolor.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>524</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1262</LocaleGroupID><LocaleCode>5242</LocaleCode><Term>Telefonförsäljare m.fl.</Term><Description>Säljer och förmedlar varor och tjänster per telefon till företag eller privatpersoner. Söker upp och värvar medlemmar eller bidragsgivare till organisationer.
</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>524</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1139</LocaleGroupID><LocaleCode>5311</LocaleCode><Term>Barnskötare</Term><Description>Sköter och aktiverar barn vid förskola, familjedaghem, förskoleklass och fritidshem.

Hit hör inte
Barnflicka/Barnvakt (9119)
Barnsjuksköterska (2232)
Barnsköterska (5325)</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>531</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1260</LocaleGroupID><LocaleCode>5312</LocaleCode><Term>Elevassistenter m.fl.</Term><Description>Hjälper, stödjer och stimulerar elever i grund- och gymnasieskola med behov av särskilt stöd i skolarbetet, enskilt och i gruppsammanhang. Bistår lärare i undervisningen.

Hit hör inte
Barnskötare (5311)</Description><LocaleFieldID>15</LocaleFieldID><LocaleLevel3Code>531</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1521</LocaleGroupID><LocaleCode>5321</LocaleCode><Term>Undersköterskor, hemtjänst, äldreboende m.fl.</Term><Description>Ger individuell vård och omsorg till äldre i eget eller särskilt boende. Utför hälso- och sjukvårdsuppgifter efter instruktion och delegering t.ex. kvalificerad sårvård och kateterspolning. Ger stöd, assistans, omvårdnad och social service till barn, äldre och personer med funktionsnedsättning i deras vardagsliv. Ger stimulans och stöd till individen i aktiviteter och kontakter med omvärlden.

Hit hör inte
Habiliteringsassistent (5330)
Hemvårdsasssitent (3411)
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>532</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1522</LocaleGroupID><LocaleCode>5323</LocaleCode><Term>Undersköterskor, vård- o specialavd o mottagning</Term><Description>Kontrollerar patienters kroppstemperatur, puls och blodtryck, tar prover och lägger om sår. Hjälper patienter med deras personliga hygien. Bäddar, delar ut mat och gör annat som ingår i den dagliga vården. Assisterar läkare och sjuksköterskor vid undersökningar och behandlingar. Tar prover, tar fram provsvar och journaler samt förbereder patienter för behandling. Plockar fram instrument inför undersökningar och ingrepp samt rengör och desinficerar dem.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>532</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1259</LocaleGroupID><LocaleCode>5325</LocaleCode><Term>Barnsköterskor</Term><Description>Sköter den dagliga omvårdnaden av barn på sjukhusens barnavdelningar. Tar prover, kontrollerar kroppstemperatur och puls m.m.

Hit hör inte
Barnskötare (5311)
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>532</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1258</LocaleGroupID><LocaleCode>5326</LocaleCode><Term>Ambulanssjukvårdare</Term><Description>Utför ambulanstransporter. Undersöker och behandlar patienten innan och under transport till sjukhus.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>532</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1257</LocaleGroupID><LocaleCode>5330</LocaleCode><Term>Vårdbiträden</Term><Description>Ger individuell vård och omsorg till äldre i eget eller särskilt boende.
</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>533</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1253</LocaleGroupID><LocaleCode>5341</LocaleCode><Term>Skötare</Term><Description>Vårdar, ger stöd och råd samt medverkar i rehabilitering av patienter inom psykiatrisk vård och missbruksvård.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>534</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1254</LocaleGroupID><LocaleCode>5342</LocaleCode><Term>Vårdare, boendestödjare</Term><Description>Ger stöd, service och omsorg till barn och vuxna med funktionsnedsättning. Fungerar som stöd för individens självständighet genom att bistå i vardagliga sysslor i hemmet, i grupp- eller serviceboende eller inom daglig verksamhet. Ger stöd även vid hygien och kommunikation samt med fritidsaktiviteter.

Hit hör inte
Personlig assistent (5343)</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>534</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1255</LocaleGroupID><LocaleCode>5343</LocaleCode><Term>Personliga assistenter</Term><Description>Underlättar för person med funktionsnedsättning att sköta sin skolgång eller sitt arbete. Ger stöd vid vardagssysslor samt fritidsaktiviteter. Ger personlig ledsagning.

Hit hör inte
Vårdare/Arbetshandledare/Boendestödjare (5342)</Description><LocaleFieldID>16</LocaleFieldID><LocaleLevel3Code>534</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1256</LocaleGroupID><LocaleCode>5349</LocaleCode><Term>Övrig vård- och omsorgspersonal</Term><Description>Utför annat biträdande arbete inom vård och omsorg än inom 5341–5343. Exempel på arbetsuppgifter: Biträder vid obduktioner och på laboratorium.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>534</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1250</LocaleGroupID><LocaleCode>5350</LocaleCode><Term>Tandsköterskor</Term><Description>Assisterar tandläkare vid undersökning, behandling och operation av patient. Putsar och polerar tänder samt tar röntgenbilder. Planerar behandlingstider, för journaler, tar betalt och gör inköp. Rengör instrument och annan utrustning.</Description><LocaleFieldID>8</LocaleFieldID><LocaleLevel3Code>535</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1247</LocaleGroupID><LocaleCode>5411</LocaleCode><Term>Brandmän</Term><Description>Släcker bränder och gör räddningsinsatser vid exempelvis trafikolyckor. Förebygger, hindrar och begränsar skador på människor, egendom eller i miljön vid olyckshändelser. Bearbetar skador när olja, farliga kemikalier och andra skadliga ämnen läckt ut. Informerar om brandskydd.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>541</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1248</LocaleGroupID><LocaleCode>5412</LocaleCode><Term>Kriminalvårdare</Term><Description>Svarar för vård och tillsyn av intagna på kriminalvårdsanstalter och allmänna häkten. Övervakar ordning och säkerhet. Aktiverar de intagna i olika fritidsverksamheter samt bedriver motivationsarbete.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>541</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1249</LocaleGroupID><LocaleCode>5413</LocaleCode><Term>Väktare och ordningsvakter</Term><Description>Patrullerar och bevakar fastigheter och områden. Kontrollerar tillträde till olika inrättningar och övervakar ordning vid offentliga evenemang m.m. Agerar vid larm och störningar, kontaktar vid behov t.ex. polis eller brandkår. Svarar för säkerhetskontroller vid flygplatser och i hamnar. Transporterar kontanter och andra värdeföremål. Skyddar vid behov enskilda personer.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>541</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1295</LocaleGroupID><LocaleCode>5414</LocaleCode><Term>SOS-operatörer m.fl.</Term><Description>Tar emot, samordnar och förmedlar larm om inträffade eller befarade olyckor i luften, på land och till sjöss. Leder arbetet med räddningsinsatser. Tar emot inbrottslarm, överfallslarm, driftlarm och trygghetslarm på larmcentral eller ledningscentral för bevakningsföretag.
</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>541</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1296</LocaleGroupID><LocaleCode>5419</LocaleCode><Term>Övrig bevaknings- och säkerhetspersonal</Term><Description>Utför annat bevaknings- och säkerhetsarbete än inom 5411-5414. Exempel på arbetsuppgifter: Bevakar stränder och simbassänger för att förhindra olyckor och rädda individer från att drunkna. Bistår personer i nöd till fjälls. Kontrollerar att parkeringsbestämmelser följs.</Description><LocaleFieldID>17</LocaleFieldID><LocaleLevel3Code>541</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1244</LocaleGroupID><LocaleCode>6111</LocaleCode><Term>Odlare av jordbruksväxter, frukt och bär</Term><Description>Bedriver växtodling. Odlar och skördar jordbruksväxter som t.ex. spannmål, olje- och vallväxter, sockerbetor samt potatis och andra köksväxter på friland. Odlar frukt och bär. Underhåller ekonomibyggnader, maskiner och utrustning.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>611</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1245</LocaleGroupID><LocaleCode>6112</LocaleCode><Term>Trädgårdsodlare</Term><Description>Bedriver trädgårdsodling. Odlar och skördar köksväxter i växthus samt plantskoleväxter, prydnadsväxter och svamp. Sår, förökar, planterar, gallrar och beskär trädgårdsväxter. Bearbetar jorden, gödslar och rensar ogräs.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>611</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1246</LocaleGroupID><LocaleCode>6113</LocaleCode><Term>Trädgårdsanläggare m.fl.</Term><Description>Anlägger och underhåller parker, trädgårdar, kyrkogårdar och golfbanor m.m. Lägger plattor, bygger murar och trappor samt planterar växter och sår gräs. Sköter blommor, träd, buskar och andra växter.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>611</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1213</LocaleGroupID><LocaleCode>6121</LocaleCode><Term>Uppfödare och skötare av lantbrukets husdjur</Term><Description>Bedriver avel, uppfödning och skötsel av lantbrukets husdjur för produktion av mjölk, kött, ägg m.m. Skor hästar. Underhåller ekonomibyggnader, maskiner och utrustning.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>612</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1242</LocaleGroupID><LocaleCode>6122</LocaleCode><Term>Uppfödare och skötare av sällskapsdjur</Term><Description>Bedriver avel, uppfödning och skötsel av sällskapsdjur.
</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>612</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1243</LocaleGroupID><LocaleCode>6129</LocaleCode><Term>Övriga djuruppfödare och djurskötare</Term><Description>Bedriver avel, uppfödning och skötsel av andra djur än inom 6121-6122 för produktion av livsmedel, pälsskinn m.m. Sköter, dresserar eller tränar djur i djurpark, på cirkus m.m.
</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>612</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1241</LocaleGroupID><LocaleCode>6130</LocaleCode><Term>Växtodlare och djuruppfödare, blandad drift</Term><Description>Bedriver växtodling kombinerat med avel och uppfödning av lantbrukets husdjur eller sällskapsdjur. Odlar och skördar jordbruksväxter samt sköter djur för att använda som lantbrukets husdjur för produktion av mjölk, kött, ägg, pälsskinn m.m. eller som sällskapsdjur.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>613</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1240</LocaleGroupID><LocaleCode>6210</LocaleCode><Term>Skogsarbetare</Term><Description>Driver skogsbruk. Vårdar och avverkar skog.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>621</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1239</LocaleGroupID><LocaleCode>6221</LocaleCode><Term>Fiskodlare</Term><Description>Odlar och inplanterar fisk och skaldjur.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>622</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1238</LocaleGroupID><LocaleCode>6222</LocaleCode><Term>Fiskare</Term><Description>Bedriver havs-, kust- och insjöfiske. Underhåller båtar och redskap.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>622</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1231</LocaleGroupID><LocaleCode>7111</LocaleCode><Term>Träarbetare, snickare m.fl.</Term><Description>Bygger och uppför träkonstruktioner inom husbyggnad, anläggning eller gruva. Bygger formar inför betonggjutning. 

Hit hör inte
Inredningsskickare (7522)
Maskinsnickare (7523)
Ställningsbyggare (7116)
</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1232</LocaleGroupID><LocaleCode>7112</LocaleCode><Term>Murare m.fl.</Term><Description>Uppför byggnadsstommar. Klär väggar med fasadtegel. Murar skorstenar, öppna spisar och kakelugnar. Putsar väggar, tak och fasader samt sätter plattor på väggar och golv. Tillverkar och monterar inredningsdetaljer av gips och gör fasadutsmyckningar.

Hit hör inte
Stensättare (7114)
</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1233</LocaleGroupID><LocaleCode>7113</LocaleCode><Term>Betongarbetare</Term><Description>Armerar och gjuter betongkonstruktioner såsom golv, väggar, valv, pelare och broar. Borrar och sågar hål i betongkonstruktioner.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1234</LocaleGroupID><LocaleCode>7114</LocaleCode><Term>Anläggningsarbetare</Term><Description>Lägger ner och sammanfogar rör av betong, metall eller plast till vatten- och avloppsledningar, fjärrvärme och fjärrkyla. Lägger ut asfalt eller betong på vägbanor m.m. Lägger ut räls, utför spårjustering och monterar växlar. Sätter kantsten och gatsten eller lägger sten- och betongplattor på gång- och körbanor. Monterar lekredskap, trappor och stödmurar samt räcken, skyltar och andra vägmarkeringar.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1235</LocaleGroupID><LocaleCode>7115</LocaleCode><Term>Anläggningsdykare</Term><Description>Arbetar under vatten med anläggningsbyggnader och reparationer av t.ex. broar, hamnar, farleder och kraftverk. Borrar, spränger, bygger formar, armerar, gjuter och utför andra anläggningsarbeten under vatten. Söker och bärgar vrakgods m.m. Inspekterar och gör mindre reparationer på fartyg.

Hit hör inte
Dykinstruktör (3422)
Räddningsdykare (5411)
</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1236</LocaleGroupID><LocaleCode>7116</LocaleCode><Term>Ställningsbyggare</Term><Description>Monterar och demonterar byggnadsställningar på byggarbetsplatser.
</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1237</LocaleGroupID><LocaleCode>7119</LocaleCode><Term>Övriga byggnads- och anläggningsarbetare</Term><Description>Utför annat bygg- och anläggningsarbete än inom 7111-7116. Exempel på arbetsuppgifter: Lägger ner och sammanfogar rör av betong, metall eller plast. Utför olika arbetsuppgifter i samband med husbyggen och byggreparationer, t.ex. byggnadsträ- och betongarbete. Monterar fabrikstillverkade betongelement.

Hit hör inte
Anläggningsarbetare (7114)
Träarbetare/Snickare (7111)
</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>711</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1225</LocaleGroupID><LocaleCode>7121</LocaleCode><Term>Takmontörer</Term><Description>Täcker yttertak med tätskikt av olika material och monterar värmeisolering. Sätter upp innetak.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>712</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1226</LocaleGroupID><LocaleCode>7122</LocaleCode><Term>Golvläggare</Term><Description>Utför golvbeläggningar av textil, plast, linoleum, kork och parkett. Ytbehandlar trägolv.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>712</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1227</LocaleGroupID><LocaleCode>7123</LocaleCode><Term>Isoleringsmontörer</Term><Description>Isolerar värme-, ventilations- och sanitetsanläggningar, pannor, cisterner och rörsystem. Skär ut och monterar ytbeklädnad som skydd för isolering. Monterar reglar på tak och husfasader och isolerar med t.ex. mineralull samt sprutar isoleringsmassa i väggar.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>712</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1228</LocaleGroupID><LocaleCode>7124</LocaleCode><Term>Glastekniker</Term><Description>Skär till och monterar glas i fönster, dörrar och ramar. Monterar inredningar, tak och fasader av glas. Monterar vindrutor och rutor i olika typer av fordon. Ramar in konst.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>712</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1229</LocaleGroupID><LocaleCode>7125</LocaleCode><Term>VVS-montörer m.fl.</Term><Description>Installerar, reparerar och utför service på rör och annan utrustning för värme, vatten och sanitet i bostadshus och andra lokaler som sjukhus, affärshus och kontorslokaler. Installerar och reparerar rörsystem inom exempelvis industrin.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>712</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1230</LocaleGroupID><LocaleCode>7126</LocaleCode><Term>Kyl- och värmepumpstekniker m.fl.</Term><Description>Installerar och servar kyl- och värmepumpsanläggningar samt tillhörande styr- och övervakningssystem.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>712</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1221</LocaleGroupID><LocaleCode>7131</LocaleCode><Term>Målare</Term><Description>Underbehandlar och målar byggnader in- och utvändigt. Spänner väv och tapetserar. Underbehandlar och målar anläggningar och konstruktioner av olika slag.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>713</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1222</LocaleGroupID><LocaleCode>7132</LocaleCode><Term>Lackerare och industrimålare</Term><Description>Underbehandlar och lackerar produkter av olika slag och material. Förser ytor med emalj eller annat ytlager.

Hit hör inte
Målare (7131)
Träförgyllare (7521)
Maskinoperatör, ytbehandling (8121)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>713</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1223</LocaleGroupID><LocaleCode>7133</LocaleCode><Term>Skorstensfejare</Term><Description>Sotar rökgasvägar i eldstäder och skorstenar. Rengör imkanaler och köksfläktar. Kontrollerar värmeanläggningar och gör täthetsprövningar och rökgasanalyser.</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>713</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1224</LocaleGroupID><LocaleCode>7134</LocaleCode><Term>Saneringsarbetare m.fl.</Term><Description>Röjer upp, rengör och återställer platser och lokaler efter olyckor, utsläpp eller skadeangrepp. Sanerar fastigheter från t.ex. asbest eller mögel samt rengör ventilationsaggregat.
</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>713</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1216</LocaleGroupID><LocaleCode>7211</LocaleCode><Term>Gjutare</Term><Description>Gjuter föremål i olika material på hantverksmässigt sätt. Tillverkar gjutformar och gjutkärnor.

Hit hör inte
Maskinformare, gjuteri (8129)
Maskinkärnmakare (8129)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>721</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1217</LocaleGroupID><LocaleCode>7212</LocaleCode><Term>Svetsare och gasskärare</Term><Description>Svetsar och löder samman metalldelar i samband med tillverkning, montering och reparation av metallprodukter. Utför specialiserat svetsningsarbete på röranläggningar. Skär ut detaljer i olika metalliska material och kapar exempelvis grovplåtar, balkar och skrot med skärbrännare eller skärmaskin.

Hit hör inte
Svetsoperatör/Automatsvetsare (7223)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>721</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1218</LocaleGroupID><LocaleCode>7213</LocaleCode><Term>Byggnads- och ventilationsplåtslagare</Term><Description>Monterar tak- och fasadbeklädnader av plåt. Tillverkar och monterar plåtdetaljer efter ritningar eller egna måttagningar. Utför underhållskontroller av tidigare utförda plåtarbeten på tak och fasader. Installerar ventilationssystem i byggnader. Monterar ventilationskanaler med tillhörande fläktar och aggregat, utför service och reparerar systemen. Kontrollerar till- och frånluftsventilation.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>721</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1219</LocaleGroupID><LocaleCode>7214</LocaleCode><Term>Tunnplåtslagare</Term><Description>Tillverkar, monterar och reparerar produkter och konstruktioner av tunnplåt. Reparerar skador och byter plåtdetaljer på fordon. Kontrollerar, reparerar och rengör cisterner. Framställer och reparerar föremål i koppar, mässing och tenn.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>721</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1220</LocaleGroupID><LocaleCode>7215</LocaleCode><Term>Stålkonstruktionsmontörer och grovplåtsslagare</Term><Description>Tillverkar och monterar detaljer till konstruktioner av grovplåt. Tillverkar, monterar, uppför och reparerar tunga metallbalkar och plåtar till stålkonstruktioner och ställningar.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>721</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1212</LocaleGroupID><LocaleCode>7221</LocaleCode><Term>Smeder</Term><Description>Formar järn eller stål med hjälp av hammare eller press inom verkstads- och byggnadssmide, stålverk och plåtslagerier. Tillverkar konstruktions-, inrednings- och utsmyckningsdetaljer i samband med byggnation eller renoveringsarbeten.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>722</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1206</LocaleGroupID><LocaleCode>7222</LocaleCode><Term>Verktygsmakare</Term><Description>Tillverkar, justerar och reparerar formverktyg för plast- eller metallprodukter samt klipp- och bockverktyg. Utför verktygsfräsning, verktygssvarvning och gnistbearbetning samt bänkarbete.
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>722</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1214</LocaleGroupID><LocaleCode>7223</LocaleCode><Term>Maskinställare o maskinoperatörer, metallarbete</Term><Description>Sköter, styr och övervakar hel- och halvautomatiska maskiner som bearbetar arbetsstycken av metall eller liknande material genom borrning, hyvling, svarvning, fräsning, gängning, slipning, svetsning m.m. Programmerar datorstyrda maskiner och korrigerar program. Sköter maskiner som bearbetar och skär material med hjälp av elektroner. Hanterar maskiner som formar detaljer i metall genom pressning eller tryck samt maskiner som kapar eller klipper metallprodukter. Sätter upp, utprovar och besiktigar verktyg. Ställer in och programmerar hel- och halvautomatiska verktygsmaskiner.

Hit hör inte
Slipare, metall (7224)
Svetsare, manuell (7212)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>722</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1215</LocaleGroupID><LocaleCode>7224</LocaleCode><Term>Slipare m.fl.</Term><Description>Slipar verktyg samt hyvlar och polerar metallytor med hjälp av handverktyg och maskiner.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>722</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1209</LocaleGroupID><LocaleCode>7231</LocaleCode><Term>Motorfordonsmekaniker och fordonsreparatörer</Term><Description>Analyserar fel, underhåller och reparerar motorer till motorfordon och båtar. Reparerar och utför service på motorcyklar, personbilar, lastbilar, långtradare, trailrar, bussar, traktorer samt cyklar. Underhåller och reparerar lantbruks-, skogs-, entreprenads- och anläggningsmaskiner. Beställer, lagerhåller och säljer reservdelar och tillbehör.

Hit hör inte
Flygmekaniker (7232)
Helikoptermekaniker (7232)
Lokreparatör (7233)
Vagnreparatör, järnväg (7233)</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>723</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1210</LocaleGroupID><LocaleCode>7232</LocaleCode><Term>Flygmekaniker m.fl.</Term><Description>Underhåller och reparerar flygmotorer, flygplan och helikoptrar. Funktionsprovar instrument, manöversystem och motorer.

Hit hör inte
Flyginstrumentmekaniker (7311)
Flygtekniker (3155)</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>723</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1211</LocaleGroupID><LocaleCode>7233</LocaleCode><Term>Underhållsmekaniker och maskinreparatörer</Term><Description>Installerar, reparerar och utför service på industrimaskiner och mekanisk utrustning. Underhåller och reparerar fartygsmotorer och andra motorer (utom motorfordons- och flygmotorer) samt rälsfordon.

Hit hör inte
Fordonsmontör (8211)
Motorbyggare (8211)
Motormontör (8211)</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>723</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1205</LocaleGroupID><LocaleCode>7311</LocaleCode><Term>Finmekaniker</Term><Description>Tillverkar, installerar, justerar och reparerar tekniska och vetenskapliga precisionsinstrument. Tillverkar och reparerar lås och vapen. Justerar och reparerar hjälpmedel och utrustning för personer med funktionsnedsättning. Monterar och utför service på lås och inpasseringssystem samt dyrkar upp lås och tillverkar nycklar. Reparerar, rengör, justerar och säljer ur.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>731</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1207</LocaleGroupID><LocaleCode>7312</LocaleCode><Term>Guld- och silversmeder</Term><Description>Formger, tillverkar, graverar och reparerar guld- och silversmedsvaror, konsthantverk och andra föremål i ädelmetall. Slipar ädelstenar samt infattar och monterar stenar och pärlor.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>731</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1208</LocaleGroupID><LocaleCode>7319</LocaleCode><Term>Musikinstrumentmakare o övriga konsthantverkare</Term><Description>Utför övrigt arbete inom finmekanik och konsthantverk än inom 7311-7312. Exempel på arbetsuppgifter: Tillverkar, reparerar och stämmer musikinstrument. Tillverkar bruks- eller prydnadsföremål av glas, keramik, trä, halm, garn, läder, sten, horn m.m. på hantverksmässigt sätt. Slöjdar, täljer, stickar, broderar, väver, knypplar etc.
</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>731</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1202</LocaleGroupID><LocaleCode>7321</LocaleCode><Term>Prepresstekniker</Term><Description>Tar emot, kvalitetsbedömer, anpassar och justerar material inför tryckning.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>732</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1203</LocaleGroupID><LocaleCode>7322</LocaleCode><Term>Tryckare</Term><Description>Sköter, ställer in och anpassar tryckpressen. Övervakar, mäter och kontrollerar tryckprocessen.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>732</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1204</LocaleGroupID><LocaleCode>7323</LocaleCode><Term>Bokbindare m.fl.</Term><Description>Sköter och övervakar maskiner som binder böcker, broschyrer, tidskrifter m.m. Utför hantverksmässig bokbindning med hjälp av skärmaskiner och pappersklippare.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>732</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1201</LocaleGroupID><LocaleCode>7411</LocaleCode><Term>Installations- och serviceelektriker</Term><Description>Gör elinstallationer i byggnader. Utför felsökning och reparationer på elektriska anläggningar.

Hit hör inte
Distributionselektriker (7413)
Industrielektriker (7412)
</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>741</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1200</LocaleGroupID><LocaleCode>7412</LocaleCode><Term>Industrielektriker</Term><Description>Installerar, underhåller och reparerar elektriska anläggningar i exempelvis industrilokaler. Underhåller och utför felsökning av utrustningar som styr olika processer inom industrin. Felsöker och reparerar elsystem i fordon, flygplan och på fartyg.
 
Hit hör inte
Distributionselektriker (7413)
Installationselektriker (7411)</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>741</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1199</LocaleGroupID><LocaleCode>7413</LocaleCode><Term>Distributionselektriker</Term><Description>Bygger, underhåller och reparerar ledningsnät som består av luftledning eller jordkabel. Underhåller och reparerar ställverk och transformatorstationer. Besiktigar ställverk och åtgärdar fel i ledningsnätet.

Hit hör inte:
Industrielektriker (7412)
Installationselektriker (7411)
</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>741</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1198</LocaleGroupID><LocaleCode>7420</LocaleCode><Term>Elektronikrep. o kommunikationselektriker m.fl.</Term><Description>Installerar och reparerar data- och telenät samt larm och signalsystem. Installerar, reparerar och utför service på hemelektronik.

Hit hör inte
Distributionselektriker (7413)
Industrielektriker (7412)
Installationselektriker (7411)
</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>742</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1165</LocaleGroupID><LocaleCode>7521</LocaleCode><Term>Manuella ytbehandlare, trä</Term><Description>Applicerar manuellt färg eller lack på trä eller träbaserat skivmaterial.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>752</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1196</LocaleGroupID><LocaleCode>7522</LocaleCode><Term>Fin-, inrednings- och möbelsnickare</Term><Description>Tillverkar och reparerar möbler, modeller, båtar och andra träprodukter på hantverksmässigt sätt. Tillverkar, monterar och reparerar inredningar för exempelvis affärer, banker och restauranger.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>752</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1197</LocaleGroupID><LocaleCode>7523</LocaleCode><Term>Maskinsnickare och maskinoperatörer, träindustri</Term><Description>Ställer in hel- och halvautomatiska träbearbetningsmaskiner samt utför bearbetning.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>752</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1192</LocaleGroupID><LocaleCode>7531</LocaleCode><Term>Skräddare och ateljésömmerskor m.fl.</Term><Description>Tar fram förslag till modeller, tillverkar mallar och mönster. Skär ut plaggdelar och andra detaljer i tyg, skinn och andra material för tillverkning av kläder och andra konfektionsprodukter. Designar och syr klädesplagg efter kunders önskemål. Ändrar och lagar kläder av tyg och pälsskinn.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>753</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1193</LocaleGroupID><LocaleCode>7532</LocaleCode><Term>Sömmare</Term><Description>Syr segel, kapell, tält, ryggsäckar, bilklädslar m.m. i textil eller liknande material. Monterar och syr exempelvis paraplyer och lampskärmar. Broderar för hand dekorationer på kläder och andra produkter.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>753</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1194</LocaleGroupID><LocaleCode>7533</LocaleCode><Term>Tapetserare</Term><Description>Stoppar och klär möbler.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>753</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1195</LocaleGroupID><LocaleCode>7534</LocaleCode><Term>Läderhantverkare och skomakare</Term><Description>Avlägsnar kött, fett och hår från hudar. Bereder skinn för vidare användning. Garvar hudar genom kalkhusbehandling och spaltning. Hanterar maskiner för att dela hudar samt färgar och mjukar upp skinn. Tillverkar och reparerar skor, väskor, sadeltyg m.m. Gör mönster för att skära till sko- och sadeldelar, väskor, sport- och andra läderartiklar. Syr läder för hand eller på maskin.</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>753</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1189</LocaleGroupID><LocaleCode>7611</LocaleCode><Term>Slaktare och styckare m.fl.</Term><Description>Slaktar djur samt grov- eller finstyckar djurkroppar. Tillverkar charkuterier och andra köttvaror. Konserverar kött och andra livsmedel med hjälp av saltning, torkning och rökning.

Hit hör inte
Färdigmatlagare (8161)
Charkuteriarbetare, butik (5222)
Maskinoperatör, kött- och fiskberedningsindustri (8161)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>761</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1190</LocaleGroupID><LocaleCode>7612</LocaleCode><Term>Bagare och konditorer</Term><Description>Bakar matbröd och kaffebröd i ett bageri, konditori eller livsmedelsbutik. Tillverkar tårtor, bakelser och kakor samt desserter, handgjord choklad och konfekt.

Hit hör inte
Maskinoperatör, bageri (8163)</Description><LocaleFieldID>6</LocaleFieldID><LocaleLevel3Code>761</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1191</LocaleGroupID><LocaleCode>7613</LocaleCode><Term>Provsmakare och kvalitetsbedömare</Term><Description>Undersöker, avsmakar och bedömer jordbruksprodukter, matvaror och drycker.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>761</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1183</LocaleGroupID><LocaleCode>8111</LocaleCode><Term>Gruv- och stenbrottsarbetare</Term><Description>Borrar och transporterar malm från gruva. Borrar och förstärker berg vid anläggningsarbeten.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>811</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1184</LocaleGroupID><LocaleCode>8112</LocaleCode><Term>Processoperatörer, stenkross- och malmförädling</Term><Description>Sköter, styr och övervakar anläggningar som krossar berg eller krossar, mal och anrikar malm.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>811</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1185</LocaleGroupID><LocaleCode>8113</LocaleCode><Term>Brunnsborrare m.fl.</Term><Description>Monterar och styr maskiner och aggregat för borrning efter vatten, olja, mineral m.m. Monterar och sköter pumpanläggning.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>811</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1186</LocaleGroupID><LocaleCode>8114</LocaleCode><Term>Maskinoperatörer, cement-, sten- och betongvaror</Term><Description>Sköter och övervakar driften av anläggningar för framställning av betong eller asfalt. Sköter maskiner som genom klyvning, pressning, formning etc. framställer sten-, cement- och betongvaror samt asfalt, asbest, grafit m.m. Gör gjutformar, armerar, gjuter och efterbehandlar betongvaror.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>811</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1187</LocaleGroupID><LocaleCode>8115</LocaleCode><Term>Bergsprängare</Term><Description>Spränger malm från gruva och berg vid anläggningsarbeten.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>811</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1188</LocaleGroupID><LocaleCode>8116</LocaleCode><Term>Stenhuggare m.fl.</Term><Description>Klyver sten till hällar eller block. Hugger, sågar, slipar och putsar sten samt graverar inskriptioner m.m. i sten.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>811</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1181</LocaleGroupID><LocaleCode>8121</LocaleCode><Term>Maskinoperatörer, ytbehandling</Term><Description>Styr och övervakar maskiner och utrustning som putsar, pläterar eller ytbehandlar metall eller metallföremål i syfte att öka motståndskraften mot frätning och förslitning, för dekorativa ändamål eller för att ge metall elektriska eller magnetiska egenskaper.

Hit hör inte
Lackerare (7132)
Träförgyllare (7521)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>812</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1182</LocaleGroupID><LocaleCode>8122</LocaleCode><Term>Valsverksoperatörer</Term><Description>Styr och övervakar valsverk i vilket stål eller andra metaller bearbetas till ämnen eller färdiga produkter.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>812</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1180</LocaleGroupID><LocaleCode>8129</LocaleCode><Term>Övr. maskin- o processoperatörer, stål- o metall</Term><Description>Utför annat maskin- och processoperatörsarbete inom stål och metall än inom 8121-8122. Exempel på arbetsuppgifter: Styr och övervakar maskiner som drar, pressar och formar metall för att tillverka tråd, spik, stållinor, rör, stänger och liknande produkter. Övervakar och kontrollerar automatiska anläggningar för gjutning. Sköter maskiner för tillverkning av gjutformar och gjutkärnor. 

Hit hör inte
Gjutare (7211)
Stränggjutare, stålverk (8121)
Värmare, valsverk (8123)
Ugnsoperatör (8193)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>812</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1179</LocaleGroupID><LocaleCode>8131</LocaleCode><Term>Maskinoperatörer, farmaceutiska produkter</Term><Description>Styr och övervakar maskiner som bearbetar, blandar och formar kemikalier och andra ämnen för att framställa farmaceutiska produkter och hygienartiklar.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>813</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1178</LocaleGroupID><LocaleCode>8132</LocaleCode><Term>Maskinoperatörer, kem.tekn. o fotografiska prod.</Term><Description>Styr och övervakar maskiner som monterar ammunition eller bearbetar kemikalier och andra ämnen för tillverkning av ammunition, sprängämnen och fyrverkerier. Styr och övervakar maskiner inom kemisk-teknisk industri som tillverkar kemikaliebaserade produkter som laminat, lim, linoleum, stearinljus, halogengaser och liknande. Styr och övervakar maskiner och utrustning som framställer och förstorar fotografiska bilder eller kopierar text, bild eller ritning.

Hit hör inte
Processoperatör, kemisk industri (8192)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>813</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1175</LocaleGroupID><LocaleCode>8141</LocaleCode><Term>Maskinoperatörer, gummiindustri</Term><Description>Styr och övervakar maskiner som blandar och valsar gummi eller som tillverkar olika produkter och detaljer av naturligt och syntetiskt gummi. Bygger upp eller regummerar gummidäck.

Hit hör inte
Däckmontör/Däck- och hjulmekaniker (8213)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>814</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1176</LocaleGroupID><LocaleCode>8142</LocaleCode><Term>Maskinoperatörer, plastindustri</Term><Description>Styr och övervakar maskiner som blandar, gjuter, formar, armerar och svetsar plastämnen och plastkompositer till olika produkter och detaljer. Bygger båtskrov m.m. i plast.

Hit hör inte
Montör, gummi- och plastprodukter (8213)	
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>814</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1177</LocaleGroupID><LocaleCode>8143</LocaleCode><Term>Maskinoperatörer, pappersvaruindustri</Term><Description>Styr och övervakar maskiner som tillverkar påsar, kartonger, säckar, kuvert och andra produkter av papper, papp, kartong och liknande material.	
	
Hit hör inte
Processoperatör, papper (8172)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>814</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1173</LocaleGroupID><LocaleCode>8151</LocaleCode><Term>Maskinoperatörer, blekning, färgning o tvättning</Term><Description>Styr och övervakar maskiner som bleker, färgar, tvättar eller på annat sätt behandlar garner, tyger och textilprodukter. Kemtvättar textil, skinn eller läder.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>815</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1174</LocaleGroupID><LocaleCode>8159</LocaleCode><Term>Övr maskinoperatörer, textil-, skinn- o läderind</Term><Description>Utför annat maskinoperatörsarbete inom textil-, skinn och läderindustri än inom 8151. Exempel på arbetsuppgifter: Hanterar maskiner för att dela hudar samt färgar och mjukar upp skinn. Ytbehandlar och polerar skinn och läder. Styr och övervakar maskiner som tillverkar skor, väskor och andra produkter i läder, skinn, garn, textil eller syntetmaterial. Styr och övervakar maskiner som tillverkar trossar, nät och snören av natur- eller syntetmaterial. Sköter maskiner som spinner, tvinnar, nystar och spolar garn och tråd. 

Hit hör inte
Ateljésömmerska (7531)
Pälssömmerska (7531)
Sadelmakare (7534)
Skomakare/Skoreparatör (7534)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>815</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1169</LocaleGroupID><LocaleCode>8161</LocaleCode><Term>Maskinoperatörer, kött- o fiskberedningsindustri</Term><Description>Styr och övervakar maskiner som bereder och tillagar råvaror för färdigmat samt bereder kött och fisk genom kokning, torkning, saltning eller rökning.

Hit hör inte
Slaktare (7611)
Charkuterist (7611)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>816</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1170</LocaleGroupID><LocaleCode>8162</LocaleCode><Term>Maskinoperatörer, mejeri</Term><Description>Styr och övervakar maskiner för behandling av mjölk samt för tillverkning av ost, smör och andra mejeriprodukter.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>816</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1171</LocaleGroupID><LocaleCode>8163</LocaleCode><Term>Maskinoperatörer, kvarn-, bageri- o konfektyrind</Term><Description>Styr och övervakar maskiner som krossar, maler, blandar och på andra sätt bearbetar säd, kryddor och liknande råvaror för konsumtion eller djurfoder. Styr och övervakar maskiner och linjer som bereder deg samt formar och bakar bröd, bakverk, pasta, choklad och konfektyr.

Hit hör inte
Bagare/Konditor (7612)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>816</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1172</LocaleGroupID><LocaleCode>8169</LocaleCode><Term>Övriga maskinoperatörer, livsmedelsindustri m.m.</Term><Description>Utför annat maskinoperatörsarbete inom livsmedelsindustri m.m. än inom 8161-8163. Exempel på arbetsuppgifter: Styr och övervakar maskiner för framställning av t.ex. fruktkonserver, vin, kaffe och tobak.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>816</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1168</LocaleGroupID><LocaleCode>8171</LocaleCode><Term>Processoperatörer, pappersmassa</Term><Description>Styr och övervakar anläggningar för tillverkning av pappersmassa och utvinning av biprodukter.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>817</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1167</LocaleGroupID><LocaleCode>8172</LocaleCode><Term>Processoperatörer, papper</Term><Description>Styr och övervakar anläggningar som tillverkar papper, papp m.m. av pappersmassa. Sköter maskiner för efterbehandling av papper eller kartong.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>817</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1166</LocaleGroupID><LocaleCode>8173</LocaleCode><Term>Operatörer inom sågverk, hyvleri och plywood m.m</Term><Description>Styr och övervakar maskiner och utrustning som behandlar, sågar, skär och flisar trä för vidare användning. Sköter lagring, sortering och torkning av virke. Styr och övervakar maskiner och utrustning som tillverkar skiktträ, träfiber- och spånskivor. Defibrerar, limmar, pressar, torkar, stansar, sågar, sorterar etc.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>817</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1164</LocaleGroupID><LocaleCode>8174</LocaleCode><Term>Maskinoperatörer inom ytbehandling, trä</Term><Description>Applicerar i maskinell process färg och lack på trä eller träbaserat skivmaterial.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>817</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1161</LocaleGroupID><LocaleCode>8181</LocaleCode><Term>Maskinoperatörer, påfyllning, packning o märkn.</Term><Description>Styr och övervakar maskiner som tappar på flaskor, försluter, emballerar, packar, väger samt märker och fäster fraktsedlar m.m. på produkter, förpackningar och behållare.
 
Hit hör inte
Handpaketerare (9320)
Varumärkare (9320)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>818</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1162</LocaleGroupID><LocaleCode>8189</LocaleCode><Term>Övriga process- och maskinoperatörer</Term><Description>Utför annat process- och maskinoperatörsarbete. Exempel på arbetsuppgifter: Styr och övervakar ugnar och andra anläggningar för tillverkning av glasmassa, glasprodukter, linser samt keramiska produkter som t.ex. kakel, keramik och tegel.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>818</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1157</LocaleGroupID><LocaleCode>8191</LocaleCode><Term>Drifttekniker vid värme- och vattenverk</Term><Description>Styr och övervakar anläggningar och maskiner som framställer och distribuerar elektricitet, ånga och hetvatten. Styr anläggningar för förbränning av avfall samt för upptagning, rening och distribution av vatten. Styr kyl- och ventilationsmaskineri.</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>819</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1158</LocaleGroupID><LocaleCode>8192</LocaleCode><Term>Processövervakare, kemisk industri</Term><Description>Styr och övervakar exempelvis pumpar och kompressorer på anläggningar för raffinering och annan behandling av petroleum eller petroleumbaserade produkter. Sköter anläggningar för behandling av kemikalier genom krossning, upphettning, blandning, destillering, filtrering m.m.</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>819</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1159</LocaleGroupID><LocaleCode>8193</LocaleCode><Term>Processövervakare, metallproduktion</Term><Description>Styr och övervakar processtyrda ugnar m.m. för smältning, omvandling och raffinering av malm och metall.

Hit hör inte
Processoperatör, värmebehandling (8129)
</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>819</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1160</LocaleGroupID><LocaleCode>8199</LocaleCode><Term>Övriga drifttekniker och processövervakare</Term><Description>Utför annat arbete inom drift- och processövervakning än inom 8191-8193. Exempel på arbetsuppgifter: Styr och övervakar industrirobotar.</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>819</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1152</LocaleGroupID><LocaleCode>8211</LocaleCode><Term>Fordonsmontörer</Term><Description>Monterar i seriemässig tillverkning större och mindre komponenter till maskiner, motorer och fordon genom att t.ex. skruva, svetsa, löda, nita eller limma.

Hit hör inte
Maskinmekaniker/Skogsmaskinmekaniker (7231)
Maskinmekaniker, industri/varvsindustri (7233)
Maskinmontör (7233)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>821</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1153</LocaleGroupID><LocaleCode>8212</LocaleCode><Term>Montörer, elektrisk och elektronisk utrustning</Term><Description>Sätter i seriemässig tillverkning samman el- och teleutrustning genom att t.ex. skruva, löda och svetsa.

Hit hör inte
Elektromekaniker (7412)
Elektronikmontör (7420)
Installationselektriker (7411)
Linjemontör, elkraft (7413)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>821</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1154</LocaleGroupID><LocaleCode>8213</LocaleCode><Term>Montörer, metall-, gummi- och plastprodukter</Term><Description>Sätter i seriemässig tillverkning samman komponenter av metall, gummi och plast till olika produkter som t.ex. leksaker, sportartiklar och cyklar. Lagar punkteringar, monterar nya däck och balanserar hjul.

Hit hör inte
Däcksbyggare (8213)
Kantpressare (7223)
Plastarbetare (8142)</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>821</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1155</LocaleGroupID><LocaleCode>8214</LocaleCode><Term>Montörer, träprodukter</Term><Description>Sätter i seriemässig tillverkning samman komponenter av trä till olika produkter som t.ex. möbler.

Hit hör inte
Maskinsnickare (7523)
</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>821</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1156</LocaleGroupID><LocaleCode>8219</LocaleCode><Term>Övriga montörer</Term><Description>Utför annat monteringsarbete än inom 8211-8214. Exempel på arbetsuppgifter: Sätter i seriemässig tillverkning samman komponenter av exempelvis papp, textil, läder och liknande material till olika produkter.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>821</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1151</LocaleGroupID><LocaleCode>8311</LocaleCode><Term>Lokförare</Term><Description>Framför lok, motorvagnar, pendeltåg, tunnelbana och växlingslok i person- och godstrafik.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>831</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1150</LocaleGroupID><LocaleCode>8312</LocaleCode><Term>Bangårdspersonal</Term><Description>Växlar och iordningställer tåg på bangårdar samt säkerhetssynar och provbromsar dem. Sköter vagnupptagningen, rangeringen, vagnexpediering och godshantering. Utför enklare underhåll av fordon.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>831</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1148</LocaleGroupID><LocaleCode>8321</LocaleCode><Term>Taxiförare m.fl.</Term><Description>Kör taxi- och personbilar samt minibussar för att transportera passagerare. Assisterar passagerare vid behov. 

Hit hör inte
Budbilsförare (8329)
Testförare (8329)</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>832</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1149</LocaleGroupID><LocaleCode>8329</LocaleCode><Term>Övriga bil-, motorcykel- och cykelförare</Term><Description>Utför annat bilförararbete än inom 8321. Exempel på arbetsuppgifter: Kör personbil, motorcykel, cykel eller minibuss för att transportera varor. 

Hit hör inte
Flyttkarl/Stadsbud (9332)</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>832</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1147</LocaleGroupID><LocaleCode>8331</LocaleCode><Term>Buss- och spårvagnsförare</Term><Description>Kör buss, trådbuss eller spårvagn för att transportera passagerare. Kontrollerar biljetter och färdbevis samt ropar ut hållplatser. Ansvarar för passagerares säkerhet under färden.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>833</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1146</LocaleGroupID><LocaleCode>8332</LocaleCode><Term>Lastbilsförare m.fl.</Term><Description>Kör tung lastbil och transporterar och hanterar gods. Beräknar godsets vikt och volym och medverkar i lastning och lossning. Transporterar och bärgar fordon. Kör bokbuss.</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>833</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1145</LocaleGroupID><LocaleCode>8341</LocaleCode><Term>Förare av jordbruks- och skogsmaskiner</Term><Description>Kör skogsmaskiner i samband med gallring och slutavverkning av skog. Kör och sköter jordbruksmaskiner exempelvis i samband med plöjning, harvning, sådd och skörd.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>834</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1144</LocaleGroupID><LocaleCode>8342</LocaleCode><Term>Anläggningsmaskinförare m.fl.</Term><Description>Kör maskiner för grävning, schaktning och lastning av till exempel jord, sten, grus och sand samt för beläggning av asfalt, betong m.m. Sköter och övervakar mudderverk och pålmaskiner. Kör maskiner för gatusopning och snöröjning samt is- och pistmaskiner.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>834</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1143</LocaleGroupID><LocaleCode>8343</LocaleCode><Term>Kranförare m.fl.</Term><Description>Manövrerar och styr kranar och lyftanordningar. Sköter och övervakar linbanor och skidliftar m.m.</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>834</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1142</LocaleGroupID><LocaleCode>8344</LocaleCode><Term>Truckförare</Term><Description>Använder truck eller liknande fordon som transporterar, lyfter, lastar, lossar och staplar gods.

Hit hör inte
Hamnarbetare/Stuveriarbetare (9331)
Lagerarbetare (4322)
Teleskoptruckförare, anläggning (8342)
Terminalarbetare (4322)
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>834</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1141</LocaleGroupID><LocaleCode>8350</LocaleCode><Term>Matroser och jungmän m.fl.</Term><Description>Håller utkik samt manövrerar och styr fartyg enligt instruktioner. Sköter däcksutrustning, rengör och målar däck och skrov.
</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>835</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1140</LocaleGroupID><LocaleCode>9111</LocaleCode><Term>Städare</Term><Description>Städar och rengör lokaler som t.ex. affärer, bostäder, hotell, industrier, kontor, restauranger och skolor. Städar fordon som t.ex. bussar, tunnelbane- och järnvägsvagnar samt fartyg och flygplan.

Hit hör inte
Fönsterputsare (9120)</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>911</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1138</LocaleGroupID><LocaleCode>9119</LocaleCode><Term>Övrig hemservicepersonal m.fl.</Term><Description>Utför annat hushållsnära arbete än inom 9111. Exempel på arbetsuppgifter: Handlar, lagar mat, städar och passar barn m.m.</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>911</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1137</LocaleGroupID><LocaleCode>9120</LocaleCode><Term>Bilrekonditionerare, fönsterputsare m.fl.</Term><Description>Utför rekonditioneringsarbete och fordonsvård. Rengör fönster, skyltfönster och glasväggar. Utför övrigt rengöringsarbete.</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>912</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1136</LocaleGroupID><LocaleCode>9210</LocaleCode><Term>Bärplockare och plantörer m.fl.</Term><Description>Skördar grönsaker, frukt och bär. Röjer, gräver, planterar, rensar, gallrar, stackar m.m., med hjälp av handredskap och handverktyg. Rengör stallar och ladugårdar.</Description><LocaleFieldID>13</LocaleFieldID><LocaleLevel3Code>921</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1135</LocaleGroupID><LocaleCode>9310</LocaleCode><Term>Grovarbetare inom bygg och anläggning</Term><Description>Röjer, river och hanterar material på byggarbetsplatser. Assisterar vid maskinellt schaktarbete på bygg- och anläggningsarbeten. Lastar, lossar och behandlar torv.

Hit hör inte
Anläggningsarbetare (7114)
Grävlastarförare, anläggning (8342)
Trädgårdsanläggare/Trädgårdsanläggningsarbetare (6113)
Träarbetare/Snickare (7111)</Description><LocaleFieldID>2</LocaleFieldID><LocaleLevel3Code>931</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1134</LocaleGroupID><LocaleCode>9320</LocaleCode><Term>Handpaketerare och andra fabriksarbetare</Term><Description>Fyller och tillsluter förpackningar för hand. Etiketterar, packar, emballerar och väger gods manuellt samt sorterar produkter. Hanterar och rengör material och produkter i samband med tillverkning.</Description><LocaleFieldID>9</LocaleFieldID><LocaleLevel3Code>932</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1133</LocaleGroupID><LocaleCode>9331</LocaleCode><Term>Hamnarbetare</Term><Description>Lastar och lossar gods samt dirigerar trafik i hamnar.
 
Hit hör inte
Depåman/Depåtekniker (4322)
Terminalarbetare (4322)
Truckförare (8344)</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>933</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1132</LocaleGroupID><LocaleCode>9332</LocaleCode><Term>Ramppersonal, flyttkarlar o varupåfyllare m.fl.</Term><Description>Packar, lastar och lossar gods, möbler, maskiner och andra artiklar. Tankar flygplan och hanterar bagage. Fyller på och staplar varor.
 
Hit hör inte
Godshanterare, truckförare (8344)</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>933</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1131</LocaleGroupID><LocaleCode>9411</LocaleCode><Term>Pizzabagare m.fl.</Term><Description>Bakar pizzor och tillreder andra maträtter exempelvis på pizzeria eller gatukök.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>941</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1130</LocaleGroupID><LocaleCode>9412</LocaleCode><Term>Restaurang- och köksbiträden m.fl.</Term><Description>Portionerar mat, tar emot betalning i kassa samt plockar disk och diskar inom restaurang eller storkök. Förbereder mat, sköljer, skalar och hackar grönsaker. Deltar i enklare matlagning. Ansvarar för frukostservering.</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>941</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1129</LocaleGroupID><LocaleCode>9413</LocaleCode><Term>Kafé- och konditoribiträden</Term><Description>Säljer och serverar kaffebröd, kaffe och andra drycker samt bereder, säljer och serverar smörgåsar, sallader och andra smårätter på ett kafé eller i konditori. Tar betalt och ansvarar för kassa. 

Hit hör inte
Barista/Kaffebartender (5132)</Description><LocaleFieldID>7</LocaleFieldID><LocaleLevel3Code>941</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1128</LocaleGroupID><LocaleCode>9520</LocaleCode><Term>Torg- och marknadsförsäljare m.fl.</Term><Description>Säljer frukt, grönsaker, mat och andra varor på torg och allmänna platser t.ex. vid marknader.</Description><LocaleFieldID>5</LocaleFieldID><LocaleLevel3Code>952</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1127</LocaleGroupID><LocaleCode>9610</LocaleCode><Term>Renhållnings- och återvinningsarbetare</Term><Description>Nedmonterar uttjänta fordon, maskiner, apparater m.m. för att återvinna delar och komponenter. Hämtar, tömmer och sorterar sopsäckar och kärl samt annat avfall och skrot. Sopar, spolar, plogar och sandar gator och vägar. Skottar snö samt röjer parker från löv.</Description><LocaleFieldID>12</LocaleFieldID><LocaleLevel3Code>961</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1126</LocaleGroupID><LocaleCode>9621</LocaleCode><Term>Reklamutdelare och tidningsdistributörer</Term><Description>Distribuerar tidningar och reklamblad till hushåll och inrättningar. 

Hit hör inte
Brevbärare (4420)</Description><LocaleFieldID>19</LocaleFieldID><LocaleLevel3Code>962</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1125</LocaleGroupID><LocaleCode>9622</LocaleCode><Term>Vaktmästare m.fl.</Term><Description>Samlar in, sorterar och delar ut post och paket m.m. Ansvarar för kontorsmaterial samt underhåller vissa kontorsmaskiner. Hjälper till vid omflyttningar. Utför enklare reparationer. Bär bagage på hotell. Tar emot entrébiljetter och ansvarar för gästers ytterkläder.</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>962</LocaleLevel3Code></LocaleGroup><LocaleGroup><LocaleGroupID>1124</LocaleGroupID><LocaleCode>9629</LocaleCode><Term>Övriga servicearbetare</Term><Description>Utför annat arbete än inom 9621-9622. Exempel på arbetsuppgifter: Fyller på varuautomater samt tömmer myntboxar och parkeringsautomater. Avläser el-, gas- och vattenmätare samt kontrollerar TV-licenser.</Description><LocaleFieldID>10</LocaleFieldID><LocaleLevel3Code>962</LocaleLevel3Code></LocaleGroup></GetAllLocaleGroupsResult></GetAllLocaleGroupsResponse></soap:Body></soap:Envelope>
    http_version: 
  recorded_at: Sun, 09 Dec 2018 09:57:21 GMT
recorded_with: VCR 3.0.3
